/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEquityStorageWrapper,
  IEquityStorageWrapperInterface,
} from "../../../../../contracts/layer_2/interfaces/equity/IEquityStorageWrapper";

const _abi = [
  {
    inputs: [],
    name: "BalanceAdjustmentCreationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "DividendCreationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingRightsCreationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "corporateActionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dividendId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "recordDate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "executionDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DividendSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "corporateActionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceAdjustmentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "executionDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "factor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "ScheduledBalanceAdjustmentSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "corporateActionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "recordDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "VotingSet",
    type: "event",
  },
] as const;

export class IEquityStorageWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): IEquityStorageWrapperInterface {
    return new utils.Interface(_abi) as IEquityStorageWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEquityStorageWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEquityStorageWrapper;
  }
}
