/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBusinessLogicResolver,
  IBusinessLogicResolverInterface,
} from "../../../../contracts/interfaces/resolver/IBusinessLogicResolver";

const _abi = [
  {
    inputs: [],
    name: "DefaultValueForConfigurationIdNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "facetId",
        type: "bytes32",
      },
    ],
    name: "DuplicatedFacetInConfiguration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "configurationId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "facetId",
        type: "bytes32",
      },
    ],
    name: "FacetIdNotRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resolverProxyConfigurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "ResolverProxyConfigurationNoRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SelectorBlacklisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "businessLogicKey",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "businessLogicAddress",
            type: "address",
          },
        ],
        indexed: false,
        internalType:
          "struct IBusinessLogicResolver.BusinessLogicRegistryData[]",
        name: "businessLogics",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLatestVersion",
        type: "uint256",
      },
    ],
    name: "BusinessLogicsRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "configurationId",
        type: "bytes32",
      },
    ],
    name: "DiamondBatchConfigurationCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "configurationId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCutManager.FacetConfiguration[]",
        name: "facetConfigurations",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isLastBatch",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "DiamondBatchConfigurationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "configurationId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCutManager.FacetConfiguration[]",
        name: "facetConfigurations",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "DiamondConfigurationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "addSelectorsToBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
    ],
    name: "cancelBatchConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "checkResolverProxyConfigurationRegistered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
        ],
        internalType: "struct IDiamondCutManager.FacetConfiguration[]",
        name: "_facetConfigurations",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "_isLastBatch",
        type: "bool",
      },
    ],
    name: "createBatchConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
        ],
        internalType: "struct IDiamondCutManager.FacetConfiguration[]",
        name: "_facetConfigurations",
        type: "tuple[]",
      },
    ],
    name: "createConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBusinessLogicCount",
    outputs: [
      {
        internalType: "uint256",
        name: "businessLogicCount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getBusinessLogicKeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "businessLogicKeys_",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getConfigurations",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "configurationIds_",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfigurationsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "configurationsLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_facetId",
        type: "bytes32",
      },
    ],
    name: "getFacetAddressByConfigurationIdVersionAndFacetId",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getFacetAddressesByConfigurationIdAndVersion",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_facetId",
        type: "bytes32",
      },
    ],
    name: "getFacetByConfigurationIdVersionAndFacetId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet",
        name: "facet_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "getFacetIdByConfigurationIdVersionAndSelector",
    outputs: [
      {
        internalType: "bytes32",
        name: "facetId_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getFacetIdsByConfigurationIdAndVersion",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "facetIds_",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_facetId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getFacetSelectorsByConfigurationIdVersionAndFacetId",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_facetId",
        type: "bytes32",
      },
    ],
    name: "getFacetSelectorsLengthByConfigurationIdVersionAndFacetId",
    outputs: [
      {
        internalType: "uint256",
        name: "facetSelectorsLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getFacetsByConfigurationIdAndVersion",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "getFacetsLengthByConfigurationIdAndVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "facetsLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "latestVersion_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
    ],
    name: "getLatestVersionByConfiguration",
    outputs: [
      {
        internalType: "uint256",
        name: "latestVersion_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getSelectorsBlacklist",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "getVersionStatus",
    outputs: [
      {
        internalType: "enum IBusinessLogicResolver.VersionStatus",
        name: "status_",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize_BusinessLogicResolver",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "isResolverProxyConfigurationRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "businessLogicKey",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "businessLogicAddress",
            type: "address",
          },
        ],
        internalType:
          "struct IBusinessLogicResolver.BusinessLogicRegistryData[]",
        name: "_businessLogics",
        type: "tuple[]",
      },
    ],
    name: "registerBusinessLogics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "removeSelectorsFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_businessLogicKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "resolveBusinessLogicByVersion",
    outputs: [
      {
        internalType: "address",
        name: "businessLogicAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_businessLogicKey",
        type: "bytes32",
      },
    ],
    name: "resolveLatestBusinessLogic",
    outputs: [
      {
        internalType: "address",
        name: "businessLogicAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "resolveResolverProxyCall",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_configurationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "resolveSupportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "exists_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBusinessLogicResolver__factory {
  static readonly abi = _abi;
  static createInterface(): IBusinessLogicResolverInterface {
    return new utils.Interface(_abi) as IBusinessLogicResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBusinessLogicResolver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBusinessLogicResolver;
  }
}
