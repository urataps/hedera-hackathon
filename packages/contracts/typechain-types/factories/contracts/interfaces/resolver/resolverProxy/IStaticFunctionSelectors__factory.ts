/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IStaticFunctionSelectors,
  IStaticFunctionSelectorsInterface,
} from "../../../../../contracts/interfaces/resolver/resolverProxy/IStaticFunctionSelectors";

const _abi = [
  {
    inputs: [],
    name: "getStaticFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "staticFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getStaticInterfaceIds",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "staticInterfaceIds_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getStaticResolverKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "staticResolverKey_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IStaticFunctionSelectors__factory {
  static readonly abi = _abi;
  static createInterface(): IStaticFunctionSelectorsInterface {
    return new utils.Interface(_abi) as IStaticFunctionSelectorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStaticFunctionSelectors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IStaticFunctionSelectors;
  }
}
