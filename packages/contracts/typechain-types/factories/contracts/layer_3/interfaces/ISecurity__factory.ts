/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISecurity,
  ISecurityInterface,
} from "../../../../contracts/layer_3/interfaces/ISecurity";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getSecurityHolders",
    outputs: [
      {
        internalType: "address[]",
        name: "holders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSecurityRegulationData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum RegulationType",
                name: "regulationType",
                type: "uint8",
              },
              {
                internalType: "enum RegulationSubType",
                name: "regulationSubType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "dealSize",
                type: "uint256",
              },
              {
                internalType: "enum AccreditedInvestors",
                name: "accreditedInvestors",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxNonAccreditedInvestors",
                type: "uint256",
              },
              {
                internalType: "enum ManualInvestorVerification",
                name: "manualInvestorVerification",
                type: "uint8",
              },
              {
                internalType: "enum InternationalInvestors",
                name: "internationalInvestors",
                type: "uint8",
              },
              {
                internalType: "enum ResaleHoldPeriod",
                name: "resaleHoldPeriod",
                type: "uint8",
              },
            ],
            internalType: "struct RegulationData",
            name: "regulationData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "countriesControlListType",
                type: "bool",
              },
              {
                internalType: "string",
                name: "listOfCountries",
                type: "string",
              },
              {
                internalType: "string",
                name: "info",
                type: "string",
              },
            ],
            internalType: "struct AdditionalSecurityData",
            name: "additionalSecurityData",
            type: "tuple",
          },
        ],
        internalType: "struct ISecurity.SecurityRegulationData",
        name: "securityRegulationData_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSecurityHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISecurity__factory {
  static readonly abi = _abi;
  static createInterface(): ISecurityInterface {
    return new utils.Interface(_abi) as ISecurityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISecurity {
    return new Contract(address, _abi, signerOrProvider) as ISecurity;
  }
}
