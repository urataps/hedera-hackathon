/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC3643Management,
  IERC3643ManagementInterface,
} from "../../../../../contracts/layer_1/interfaces/ERC3643/IERC3643Management";

const _abi = [
  {
    inputs: [],
    name: "AddressNotVerified",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotRecoverWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "ComplianceCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ComplianceNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "IdentityRegistryCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InputAmountsArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InputBoolArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "WalletRecovered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "AgentAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "AgentRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "identityRegistry",
        type: "address",
      },
    ],
    name: "IdentityRegistryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_lostWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_investorOnchainID",
        type: "address",
      },
    ],
    name: "RecoverySuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newVersion",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOnchainID",
        type: "address",
      },
    ],
    name: "UpdatedTokenInformation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "addAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_identityRegistry",
        type: "address",
      },
    ],
    name: "initialize_ERC3643",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lostWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_investorOnchainID",
        type: "address",
      },
    ],
    name: "recoveryAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "removeAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "setCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_identityRegistry",
        type: "address",
      },
    ],
    name: "setIdentityRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_onchainID",
        type: "address",
      },
    ],
    name: "setOnchainID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC3643Management__factory {
  static readonly abi = _abi;
  static createInterface(): IERC3643ManagementInterface {
    return new utils.Interface(_abi) as IERC3643ManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC3643Management {
    return new Contract(address, _abi, signerOrProvider) as IERC3643Management;
  }
}
