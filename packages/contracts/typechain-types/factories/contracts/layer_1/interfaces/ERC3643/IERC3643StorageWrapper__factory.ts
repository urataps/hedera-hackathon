/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC3643StorageWrapper,
  IERC3643StorageWrapperInterface,
} from "../../../../../contracts/layer_1/interfaces/ERC3643/IERC3643StorageWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requestedUnfreeze",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableFrozen",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
    ],
    name: "InsufficientFrozenBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "compliance",
        type: "address",
      },
    ],
    name: "ComplianceAdded",
    type: "event",
  },
] as const;

export class IERC3643StorageWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): IERC3643StorageWrapperInterface {
    return new utils.Interface(_abi) as IERC3643StorageWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC3643StorageWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IERC3643StorageWrapper;
  }
}
