/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISsiManagement,
  ISsiManagementInterface,
} from "../../../../../contracts/layer_1/interfaces/ssi/ISsiManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "AccountIsNotIssuer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "ListedIssuer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "UnlistedIssuer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "AddedToIssuerList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "RemovedFromIssuerList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRegistryAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRegistryAddress",
        type: "address",
      },
    ],
    name: "RevocationRegistryUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
    ],
    name: "addIssuer",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIssuerListCount",
    outputs: [
      {
        internalType: "uint256",
        name: "issuerListCount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getIssuerListMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "members_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevocationRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "revocationRegistryAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
    ],
    name: "isIssuer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
    ],
    name: "removeIssuer",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_revocationRegistryAddress",
        type: "address",
      },
    ],
    name: "setRevocationRegistryAddress",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISsiManagement__factory {
  static readonly abi = _abi;
  static createInterface(): ISsiManagementInterface {
    return new utils.Interface(_abi) as ISsiManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISsiManagement {
    return new Contract(address, _abi, signerOrProvider) as ISsiManagement;
  }
}
