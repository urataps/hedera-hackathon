/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IExternalPauseManagement,
  IExternalPauseManagementInterface,
} from "../../../../../contracts/layer_1/interfaces/externalPauses/IExternalPauseManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pauses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "actives",
        type: "bool[]",
      },
    ],
    name: "ExternalPausesNotUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pause",
        type: "address",
      },
    ],
    name: "ListedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pause",
        type: "address",
      },
    ],
    name: "UnlistedPause",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pause",
        type: "address",
      },
    ],
    name: "AddedToExternalPauses",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "pauses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "actives",
        type: "bool[]",
      },
    ],
    name: "ExternalPausesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pause",
        type: "address",
      },
    ],
    name: "RemovedFromExternalPauses",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pause",
        type: "address",
      },
    ],
    name: "addExternalPause",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getExternalPausesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "externalPausesCount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getExternalPausesMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "members_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pauses",
        type: "address[]",
      },
    ],
    name: "initialize_ExternalPauses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pause",
        type: "address",
      },
    ],
    name: "isExternalPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pause",
        type: "address",
      },
    ],
    name: "removeExternalPause",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pauses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_actives",
        type: "bool[]",
      },
    ],
    name: "updateExternalPauses",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IExternalPauseManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IExternalPauseManagementInterface {
    return new utils.Interface(_abi) as IExternalPauseManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExternalPauseManagement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IExternalPauseManagement;
  }
}
