/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IProtectedPartitions,
  IProtectedPartitionsInterface,
} from "../../../../../contracts/layer_1/interfaces/protectedPartitions/IProtectedPartitions";

const _abi = [
  {
    inputs: [],
    name: "arePartitionsProtected",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "calculateRoleForPartition",
    outputs: [
      {
        internalType: "bytes32",
        name: "roleForPartition_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNounceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_arePartitionsProtected",
        type: "bool",
      },
    ],
    name: "initialize_ProtectedPartitions",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protectPartitions",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unprotectPartitions",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IProtectedPartitions__factory {
  static readonly abi = _abi;
  static createInterface(): IProtectedPartitionsInterface {
    return new utils.Interface(_abi) as IProtectedPartitionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProtectedPartitions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IProtectedPartitions;
  }
}
