/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IExternalControlListManagement,
  IExternalControlListManagementInterface,
} from "../../../../../contracts/layer_1/interfaces/externalControlLists/IExternalControlListManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "controlLista",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "actives",
        type: "bool[]",
      },
    ],
    name: "ExternalControlListsNotUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controlList",
        type: "address",
      },
    ],
    name: "ListedControlList",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controlList",
        type: "address",
      },
    ],
    name: "UnlistedControlList",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "controlList",
        type: "address",
      },
    ],
    name: "AddedToExternalControlLists",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "controlLists",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "actives",
        type: "bool[]",
      },
    ],
    name: "ExternalControlListsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "controlList",
        type: "address",
      },
    ],
    name: "RemovedFromExternalControlLists",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controlList",
        type: "address",
      },
    ],
    name: "addExternalControlList",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getExternalControlListsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "externalControlListsCount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageLength",
        type: "uint256",
      },
    ],
    name: "getExternalControlListsMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "members_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_controlLists",
        type: "address[]",
      },
    ],
    name: "initialize_ExternalControlLists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controlList",
        type: "address",
      },
    ],
    name: "isExternalControlList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controlList",
        type: "address",
      },
    ],
    name: "removeExternalControlList",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_controlLists",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_actives",
        type: "bool[]",
      },
    ],
    name: "updateExternalControlLists",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IExternalControlListManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IExternalControlListManagementInterface {
    return new utils.Interface(_abi) as IExternalControlListManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExternalControlListManagement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IExternalControlListManagement;
  }
}
