/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IClearingActions,
  IClearingActionsInterface,
} from "../../../../../contracts/layer_1/interfaces/clearing/IClearingActions";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ClearingActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ClearingDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "clearingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IClearing.ClearingOperationType",
        name: "clearingOperationType",
        type: "uint8",
      },
    ],
    name: "ClearingOperationApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "clearingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IClearing.ClearingOperationType",
        name: "clearingOperationType",
        type: "uint8",
      },
    ],
    name: "ClearingOperationCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "clearingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IClearing.ClearingOperationType",
        name: "clearingOperationType",
        type: "uint8",
      },
    ],
    name: "ClearingOperationReclaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "activateClearing",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IClearing.ClearingOperationType",
            name: "clearingOperationType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenHolder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "clearingId",
            type: "uint256",
          },
        ],
        internalType: "struct IClearing.ClearingOperationIdentifier",
        name: "_clearingOperationIdentifier",
        type: "tuple",
      },
    ],
    name: "approveClearingOperationByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IClearing.ClearingOperationType",
            name: "clearingOperationType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenHolder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "clearingId",
            type: "uint256",
          },
        ],
        internalType: "struct IClearing.ClearingOperationIdentifier",
        name: "_clearingOperationIdentifier",
        type: "tuple",
      },
    ],
    name: "cancelClearingOperationByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateClearing",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_activateClearing",
        type: "bool",
      },
    ],
    name: "initializeClearing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isClearingActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IClearing.ClearingOperationType",
            name: "clearingOperationType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenHolder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "clearingId",
            type: "uint256",
          },
        ],
        internalType: "struct IClearing.ClearingOperationIdentifier",
        name: "_clearingOperationIdentifier",
        type: "tuple",
      },
    ],
    name: "reclaimClearingOperationByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IClearingActions__factory {
  static readonly abi = _abi;
  static createInterface(): IClearingActionsInterface {
    return new utils.Interface(_abi) as IClearingActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IClearingActions {
    return new Contract(address, _abi, signerOrProvider) as IClearingActions;
  }
}
