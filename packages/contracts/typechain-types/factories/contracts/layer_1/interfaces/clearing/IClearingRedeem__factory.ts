/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IClearingRedeem,
  IClearingRedeemInterface,
} from "../../../../../contracts/layer_1/interfaces/clearing/IClearingRedeem";

const _abi = [
  {
    inputs: [],
    name: "ClearingIsActivated",
    type: "error",
  },
  {
    inputs: [],
    name: "ClearingIsDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpirationDateNotReached",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpirationDateReached",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongClearingId",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IClearing.ClearingOperation",
        name: "_clearingOperation",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "clearingRedeemByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "clearingId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "expirationTimestamp",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IClearing.ClearingOperation",
            name: "clearingOperation",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct IClearing.ClearingOperationFrom",
        name: "_clearingOperationFrom",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "clearingRedeemFromByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "clearingId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "clearingId",
        type: "uint256",
      },
    ],
    name: "getClearingRedeemForByPartition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
          {
            internalType: "enum ThirdPartyType",
            name: "operatorType",
            type: "uint8",
          },
        ],
        internalType: "struct IClearing.ClearingRedeemData",
        name: "clearingRedeemData_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "expirationTimestamp",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IClearing.ClearingOperation",
            name: "clearingOperation",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct IClearing.ClearingOperationFrom",
        name: "_clearingOperationFrom",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "operatorClearingRedeemByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "clearingId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "expirationTimestamp",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IClearing.ClearingOperation",
            name: "clearingOperation",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct IClearing.ProtectedClearingOperation",
        name: "_protectedClearingOperation",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "protectedClearingRedeemByPartition",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "clearingId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IClearingRedeem__factory {
  static readonly abi = _abi;
  static createInterface(): IClearingRedeemInterface {
    return new utils.Interface(_abi) as IClearingRedeemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IClearingRedeem {
    return new Contract(address, _abi, signerOrProvider) as IClearingRedeem;
  }
}
