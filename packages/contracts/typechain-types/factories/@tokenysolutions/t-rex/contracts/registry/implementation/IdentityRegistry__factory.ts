/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  IdentityRegistry,
  IdentityRegistryInterface,
} from "../../../../../../@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "AgentAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "AgentRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimTopicsRegistry",
        type: "address",
      },
    ],
    name: "ClaimTopicsRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
    ],
    name: "CountryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IIdentity",
        name: "identity",
        type: "address",
      },
    ],
    name: "IdentityRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IIdentity",
        name: "identity",
        type: "address",
      },
    ],
    name: "IdentityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "identityStorage",
        type: "address",
      },
    ],
    name: "IdentityStorageSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IIdentity",
        name: "oldIdentity",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IIdentity",
        name: "newIdentity",
        type: "address",
      },
    ],
    name: "IdentityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trustedIssuersRegistry",
        type: "address",
      },
    ],
    name: "TrustedIssuersRegistrySet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "addAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
      {
        internalType: "contract IIdentity[]",
        name: "_identities",
        type: "address[]",
      },
      {
        internalType: "uint16[]",
        name: "_countries",
        type: "uint16[]",
      },
    ],
    name: "batchRegisterIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "deleteIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "identity",
    outputs: [
      {
        internalType: "contract IIdentity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identityStorage",
    outputs: [
      {
        internalType: "contract IIdentityRegistryStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedIssuersRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimTopicsRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_identityStorage",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "investorCountry",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "isAgent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuersRegistry",
    outputs: [
      {
        internalType: "contract ITrustedIssuersRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "contract IIdentity",
        name: "_identity",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "registerIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "removeAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimTopicsRegistry",
        type: "address",
      },
    ],
    name: "setClaimTopicsRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_identityRegistryStorage",
        type: "address",
      },
    ],
    name: "setIdentityRegistryStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedIssuersRegistry",
        type: "address",
      },
    ],
    name: "setTrustedIssuersRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "topicsRegistry",
    outputs: [
      {
        internalType: "contract IClaimTopicsRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "updateCountry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "contract IIdentity",
        name: "_identity",
        type: "address",
      },
    ],
    name: "updateIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b06806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384e79842116100b8578063b4f3fcb71161007c578063b4f3fcb71461029b578063b9209e33146102ac578063e744d789146102bf578063f0eb5e54146102d2578063f11abfd8146102e5578063f2fde38b146102f657600080fd5b806384e798421461023e5780638da5cb5b146102515780638e098ca11461026257806397a6278e14610275578063a8d29d1d1461028857600080fd5b8063454a03e01161010a578063454a03e0146101c45780635dbe47e8146101d7578063653dc9f1146101ea578063670af6a9146101fd578063715018a6146102105780637e42683b1461021857600080fd5b8063184b9559146101475780631ffbb0641461015c57806326d941ae146101845780633b239a7f146101975780633b3e12f4146101aa575b600080fd5b61015a6101553660046113cd565b610309565b005b61016f61016a366004611418565b61053e565b60405190151581526020015b60405180910390f35b61015a610192366004611418565b610551565b61015a6101a536600461144c565b6105a3565b6066546001600160a01b03165b60405161017b9190611485565b61015a6101d2366004611499565b61066f565b61016f6101e5366004611418565b610742565b61015a6101f8366004611524565b61076c565b61015a61020b366004611418565b61080a565b61015a61085c565b61022b610226366004611418565b610870565b60405161ffff909116815260200161017b565b61015a61024c366004611418565b6108e2565b6033546001600160a01b03166101b7565b61015a6102703660046115bd565b610952565b61015a610283366004611418565b610a28565b61015a610296366004611418565b610a98565b6067546001600160a01b03166101b7565b61016f6102ba366004611418565b610b67565b61015a6102cd366004611418565b610fef565b6101b76102e0366004611418565b611041565b6068546001600160a01b03166101b7565b61015a610304366004611418565b6110b3565b600054610100900460ff16158080156103295750600054600160ff909116105b806103435750303b158015610343575060005460ff166001145b6103ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103ce576000805461ff0019166101001790555b6001600160a01b038416158015906103ee57506001600160a01b03831615155b801561040257506001600160a01b03821615155b61041e5760405162461bcd60e51b81526004016103a2906115eb565b606680546001600160a01b038086166001600160a01b031992831681179093556067805488831690841617905560688054918616919092161790556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a26040516001600160a01b038516907f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a26040516001600160a01b038316907f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a26104f261112c565b8015610538576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600061054b60658361115b565b92915050565b6105596111de565b606880546001600160a01b0319166001600160a01b0383169081179091556040517f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a250565b6105ac3361053e565b6105c85760405162461bcd60e51b81526004016103a290611622565b606854604051639f3418d560e01b81526001600160a01b03848116600483015261ffff8416602483015290911690639f3418d590604401600060405180830381600087803b15801561061957600080fd5b505af115801561062d573d6000803e3d6000fd5b505060405161ffff841692506001600160a01b03851691507f04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee85390600090a35050565b6106783361053e565b6106945760405162461bcd60e51b81526004016103a290611622565b60685460405163a53410dd60e01b81526001600160a01b038581166004830152848116602483015261ffff841660448301529091169063a53410dd90606401600060405180830381600087803b1580156106ed57600080fd5b505af1158015610701573d6000803e3d6000fd5b50506040516001600160a01b038086169350861691507f6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af1990600090a3505050565b60008061074e83611041565b6001600160a01b03160361076457506000919050565b506001919050565b60005b85811015610801576107ef87878381811061078c5761078c611670565b90506020020160208101906107a19190611418565b8686848181106107b3576107b3611670565b90506020020160208101906107c89190611418565b8585858181106107da576107da611670565b90506020020160208101906101d29190611686565b806107f9816116b9565b91505061076f565b50505050505050565b6108126111de565b606680546001600160a01b0319166001600160a01b0383169081179091556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a250565b6108646111de565b61086e6000611238565b565b606854604051631c9f84ef60e21b81526000916001600160a01b03169063727e13bc906108a1908590600401611485565b602060405180830381865afa1580156108be573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b91906116d2565b6108ea6111de565b6001600160a01b0381166109105760405162461bcd60e51b81526004016103a2906115eb565b61091b60658261128a565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b61095b3361053e565b6109775760405162461bcd60e51b81526004016103a290611622565b600061098283611041565b606854604051637402e7c360e11b81526001600160a01b038681166004830152858116602483015292935091169063e805cf8690604401600060405180830381600087803b1580156109d357600080fd5b505af11580156109e7573d6000803e3d6000fd5b50506040516001600160a01b038086169350841691507fe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf601090600090a3505050565b610a306111de565b6001600160a01b038116610a565760405162461bcd60e51b81526004016103a2906115eb565b610a61606582611306565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b610aa13361053e565b610abd5760405162461bcd60e51b81526004016103a290611622565b6000610ac882611041565b60685460405163cf191bcd60e01b81529192506001600160a01b03169063cf191bcd90610af9908590600401611485565b600060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b50506040516001600160a01b038085169350851691507f59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f32790600090a35050565b600080610b7383611041565b6001600160a01b031603610b8957506000919050565b606654604080516337c2758160e21b815290516000926001600160a01b03169163df09d60491600480830192869291908290030181865afa158015610bd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bfa9190810190611758565b90508051600003610c0e5750600192915050565b600080600060608060005b8651811015610fe05760675487516000916001600160a01b0316906352c111d1908a9085908110610c4c57610c4c611670565b60200260200101516040518263ffffffff1660e01b8152600401610c7291815260200190565b600060405180830381865afa158015610c8f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb791908101906117ed565b90508051600003610cd2575060009998505050505050505050565b600081516001600160401b03811115610ced57610ced6116ef565b604051908082528060200260200182016040528015610d16578160200160208202803683370190505b50905060005b8251811015610dc357828181518110610d3757610d37611670565b60200260200101518a8581518110610d5157610d51611670565b6020026020010151604051602001610d7e9291906001600160a01b03929092168252602082015260400190565b60405160208183030381529060405280519060200120828281518110610da657610da6611670565b602090810291909101015280610dbb816116b9565b915050610d1c565b5060005b8151811015610fca57610dd98c611041565b6001600160a01b031663c9100bcb838381518110610df957610df9611670565b60200260200101516040518263ffffffff1660e01b8152600401610e1f91815260200190565b600060405180830381865afa158015610e3c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e64919081019061190d565b508e51949d50929b50909950975095508a9085908110610e8657610e86611670565b60200260200101518903610f9257866001600160a01b031663c0969a6e610eac8e611041565b8c8781518110610ebe57610ebe611670565b602002602001015189896040518563ffffffff1660e01b8152600401610ee794939291906119fa565b602060405180830381865afa925050508015610f20575060408051601f3d908101601f19168201909252610f1d91810190611a33565b60015b610f4f5760018251610f329190611a55565b8103610f4a575060009b9a5050505050505050505050565b610fb8565b8015610f5a57825191505b80158015610f74575060018351610f719190611a55565b82145b15610f8c575060009c9b505050505050505050505050565b50610fb8565b60018251610fa09190611a55565b8103610fb8575060009b9a5050505050505050505050565b80610fc2816116b9565b915050610dc7565b5050508080610fd8906116b9565b915050610c19565b50600198975050505050505050565b610ff76111de565b606780546001600160a01b0319166001600160a01b0383169081179091556040517f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a250565b606854604051637988d3a560e01b81526000916001600160a01b031690637988d3a590611072908590600401611485565b602060405180830381865afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611a68565b6110bb6111de565b6001600160a01b0381166111205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a2565b61112981611238565b50565b600054610100900460ff166111535760405162461bcd60e51b81526004016103a290611a85565b61086e611388565b60006001600160a01b0382166111be5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016103a2565b506001600160a01b03166000908152602091909152604090205460ff1690565b6033546001600160a01b0316331461086e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611294828261115b565b156112e15760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016103a2565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b611310828261115b565b6113665760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016103a2565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600054610100900460ff166113af5760405162461bcd60e51b81526004016103a290611a85565b61086e33611238565b6001600160a01b038116811461112957600080fd5b6000806000606084860312156113e257600080fd5b83356113ed816113b8565b925060208401356113fd816113b8565b9150604084013561140d816113b8565b809150509250925092565b60006020828403121561142a57600080fd5b8135611435816113b8565b9392505050565b61ffff8116811461112957600080fd5b6000806040838503121561145f57600080fd5b823561146a816113b8565b9150602083013561147a8161143c565b809150509250929050565b6001600160a01b0391909116815260200190565b6000806000606084860312156114ae57600080fd5b83356114b9816113b8565b925060208401356114c9816113b8565b9150604084013561140d8161143c565b60008083601f8401126114eb57600080fd5b5081356001600160401b0381111561150257600080fd5b6020830191508360208260051b850101111561151d57600080fd5b9250929050565b6000806000806000806060878903121561153d57600080fd5b86356001600160401b038082111561155457600080fd5b6115608a838b016114d9565b9098509650602089013591508082111561157957600080fd5b6115858a838b016114d9565b9096509450604089013591508082111561159e57600080fd5b506115ab89828a016114d9565b979a9699509497509295939492505050565b600080604083850312156115d057600080fd5b82356115db816113b8565b9150602083013561147a816113b8565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b6020808252602e908201527f4167656e74526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204167656e7420726f6c6560901b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561169857600080fd5b81356114358161143c565b634e487b7160e01b600052601160045260246000fd5b6000600182016116cb576116cb6116a3565b5060010190565b6000602082840312156116e457600080fd5b81516114358161143c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561172d5761172d6116ef565b604052919050565b60006001600160401b0382111561174e5761174e6116ef565b5060051b60200190565b6000602080838503121561176b57600080fd5b82516001600160401b0381111561178157600080fd5b8301601f8101851361179257600080fd5b80516117a56117a082611735565b611705565b81815260059190911b820183019083810190878311156117c457600080fd5b928401925b828410156117e2578351825292840192908401906117c9565b979650505050505050565b6000602080838503121561180057600080fd5b82516001600160401b0381111561181657600080fd5b8301601f8101851361182757600080fd5b80516118356117a082611735565b81815260059190911b8201830190838101908783111561185457600080fd5b928401925b828410156117e257835161186c816113b8565b82529284019290840190611859565b60005b8381101561189657818101518382015260200161187e565b50506000910152565b60006001600160401b038311156118b8576118b86116ef565b6118cb601f8401601f1916602001611705565b90508281528383830111156118df57600080fd5b61143583602083018461187b565b600082601f8301126118fe57600080fd5b6114358383516020850161189f565b60008060008060008060c0878903121561192657600080fd5b8651955060208701519450604087015161193f816113b8565b60608801519094506001600160401b038082111561195c57600080fd5b6119688a838b016118ed565b9450608089015191508082111561197e57600080fd5b61198a8a838b016118ed565b935060a08901519150808211156119a057600080fd5b508701601f810189136119b257600080fd5b6119c18982516020840161189f565b9150509295509295509295565b600081518084526119e681602086016020860161187b565b601f01601f19169290920160200192915050565b60018060a01b0385168152836020820152608060408201526000611a2160808301856119ce565b82810360608401526117e281856119ce565b600060208284031215611a4557600080fd5b8151801515811461143557600080fd5b8181038181111561054b5761054b6116a3565b600060208284031215611a7a57600080fd5b8151611435816113b8565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220eb528ddda179539a2c7611c16f5fca1c4e8f8747120de2021d5182bc6180ff6a64736f6c63430008110033";

type IdentityRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IdentityRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IdentityRegistry__factory extends ContractFactory {
  constructor(...args: IdentityRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IdentityRegistry> {
    return super.deploy(overrides || {}) as Promise<IdentityRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IdentityRegistry {
    return super.attach(address) as IdentityRegistry;
  }
  override connect(signer: Signer): IdentityRegistry__factory {
    return super.connect(signer) as IdentityRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IdentityRegistryInterface {
    return new utils.Interface(_abi) as IdentityRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IdentityRegistry {
    return new Contract(address, _abi, signerOrProvider) as IdentityRegistry;
  }
}
