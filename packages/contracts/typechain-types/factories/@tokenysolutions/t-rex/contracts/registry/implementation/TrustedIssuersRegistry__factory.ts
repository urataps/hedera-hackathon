/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  TrustedIssuersRegistry,
  TrustedIssuersRegistryInterface,
} from "../../../../../../@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IClaimIssuer",
        name: "trustedIssuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "claimTopics",
        type: "uint256[]",
      },
    ],
    name: "ClaimTopicsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IClaimIssuer",
        name: "trustedIssuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "claimTopics",
        type: "uint256[]",
      },
    ],
    name: "TrustedIssuerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IClaimIssuer",
        name: "trustedIssuer",
        type: "address",
      },
    ],
    name: "TrustedIssuerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IClaimIssuer",
        name: "_trustedIssuer",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_claimTopics",
        type: "uint256[]",
      },
    ],
    name: "addTrustedIssuer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClaimIssuer",
        name: "_trustedIssuer",
        type: "address",
      },
    ],
    name: "getTrustedIssuerClaimTopics",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedIssuers",
    outputs: [
      {
        internalType: "contract IClaimIssuer[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimTopic",
        type: "uint256",
      },
    ],
    name: "getTrustedIssuersForClaimTopic",
    outputs: [
      {
        internalType: "contract IClaimIssuer[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_claimTopic",
        type: "uint256",
      },
    ],
    name: "hasClaimTopic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
    ],
    name: "isTrustedIssuer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClaimIssuer",
        name: "_trustedIssuer",
        type: "address",
      },
    ],
    name: "removeTrustedIssuer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClaimIssuer",
        name: "_trustedIssuer",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_claimTopics",
        type: "uint256[]",
      },
    ],
    name: "updateIssuerClaimTopics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type TrustedIssuersRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrustedIssuersRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrustedIssuersRegistry__factory extends ContractFactory {
  constructor(...args: TrustedIssuersRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TrustedIssuersRegistry> {
    return super.deploy(overrides || {}) as Promise<TrustedIssuersRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TrustedIssuersRegistry {
    return super.attach(address) as TrustedIssuersRegistry;
  }
  override connect(signer: Signer): TrustedIssuersRegistry__factory {
    return super.connect(signer) as TrustedIssuersRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustedIssuersRegistryInterface {
    return new utils.Interface(_abi) as TrustedIssuersRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustedIssuersRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TrustedIssuersRegistry;
  }
}
