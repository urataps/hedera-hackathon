/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  TREXImplementationAuthority,
  TREXImplementationAuthorityInterface,
} from "../../../../../../@tokenysolutions/t-rex/contracts/proxy/authority/TREXImplementationAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "referenceStatus",
        type: "bool",
      },
      {
        internalType: "address",
        name: "trexFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "iaFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "iaFactory",
        type: "address",
      },
    ],
    name: "IAFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newImplementationAuthority",
        type: "address",
      },
    ],
    name: "ImplementationAuthorityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "referenceStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trexFactory",
        type: "address",
      },
    ],
    name: "ImplementationAuthoritySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trexFactory",
        type: "address",
      },
    ],
    name: "TREXFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        indexed: true,
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "version",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctrImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irsImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "tirImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "mcImplementation",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct ITREXImplementationAuthority.TREXContracts",
        name: "trex",
        type: "tuple",
      },
    ],
    name: "TREXVersionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        indexed: true,
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "version",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctrImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irsImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "tirImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "mcImplementation",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct ITREXImplementationAuthority.TREXContracts",
        name: "trex",
        type: "tuple",
      },
    ],
    name: "TREXVersionFetched",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        indexed: true,
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "version",
        type: "tuple",
      },
    ],
    name: "VersionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "_version",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctrImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irsImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "tirImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "mcImplementation",
            type: "address",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.TREXContracts",
        name: "_trex",
        type: "tuple",
      },
    ],
    name: "addAndUseTREXVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "_version",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctrImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irsImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "tirImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "mcImplementation",
            type: "address",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.TREXContracts",
        name: "_trex",
        type: "tuple",
      },
    ],
    name: "addTREXVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newImplementationAuthority",
        type: "address",
      },
    ],
    name: "changeImplementationAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "_version",
        type: "tuple",
      },
    ],
    name: "fetchVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCTRImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "_version",
        type: "tuple",
      },
    ],
    name: "getContracts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctrImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "irsImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "tirImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "mcImplementation",
            type: "address",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.TREXContracts",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIRImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIRSImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMCImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReferenceContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTIRImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTREXFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isReferenceContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "iaFactory",
        type: "address",
      },
    ],
    name: "setIAFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trexFactory",
        type: "address",
      },
    ],
    name: "setTREXFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "major",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minor",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "patch",
            type: "uint8",
          },
        ],
        internalType: "struct ITREXImplementationAuthority.Version",
        name: "_version",
        type: "tuple",
      },
    ],
    name: "useTREXVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024b7380380620024b7833981016040819052620000349162000173565b6200003f3362000106565b600380546001600160a81b031916841515610100600160a81b03198116919091176101006001600160a01b0386811691820292909217909355600480546001600160a01b0319169185169190911790556040805191825260208201929092527f2a6aba4ff896a38777fb29a590abf5d340a4ba64314bcadf68be9c3ee92b485a910160405180910390a16040516001600160a01b038216907f5fb25b36f93b3d8443f7502abdc1157f581f15db724459ffb2800fce6132a00890600090a2505050620001c3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200016e57600080fd5b919050565b6000806000606084860312156200018957600080fd5b835180151581146200019a57600080fd5b9250620001aa6020850162000156565b9150620001ba6040850162000156565b90509250925092565b6122e480620001d36000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637f82a5e7116100b8578063cd24be221161007c578063cd24be221461028a578063cf49020e14610292578063f2fde38b146102a5578063f38d2491146102b8578063fabec44a146102cb578063fedcc0521461034a57600080fd5b80637f82a5e7146101dd5780638da5cb5b146101f05780639585548a146102015780639e3e7bb914610214578063afce4bea1461021c57600080fd5b80636df23789116100ff5780636df237891461019f5780636ff6e83f146101b2578063709bc7f3146101ba578063715018a6146101c257806371673bd0146101ca57600080fd5b80630f3ca8ca1461013c5780631320a65a146101515780631ee9ce8b1461016c5780632c5d4f8e1461018157806361f8982514610197575b600080fd5b61014f61014a366004611d2f565b610352565b005b60035460ff1660405190151581526020015b60405180910390f35b610174610623565b6040516101639190611d52565b60035461010090046001600160a01b0316610174565b610174610685565b61014f6101ad366004611d7b565b6106e7565b6101746107e1565b610174610843565b61014f6108a2565b61014f6101d8366004611d98565b6108b6565b61014f6101eb366004611dd9565b6108cd565b6000546001600160a01b0316610174565b61014f61020f366004611d98565b6114e0565b61017461173c565b61022f61022a366004611d2f565b61179e565b604051610163919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b610174611856565b61014f6102a0366004611d7b565b6118d4565b61014f6102b3366004611d7b565b6119cc565b61014f6102c6366004611d2f565b611a45565b61031e6040805160608101825260008082526020820181905291810191909152506040805160608101825260015460ff808216835261010082048116602084015262010000909104169181019190915290565b60408051825160ff90811682526020808501518216908301529282015190921690820152606001610163565b610174611bbb565b60035460ff16156103b45760405162461bcd60e51b815260206004820152602160248201527f63616e6e6f742063616c6c206f6e207265666572656e636520636f6e747261636044820152601d60fa1b60648201526084015b60405180910390fd5b60006002816103d06103cb36869003860186611e58565b611c1d565b81526020810191909152604001600020546001600160a01b0316146104315760405162461bcd60e51b815260206004820152601760248201527676657273696f6e206665746368656420616c726561647960481b60448201526064016103ab565b610439611856565b6001600160a01b031663afce4bea826040518263ffffffff1660e01b81526004016104649190611eac565b60c060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190611ef4565b600260006104bb6103cb36869003860186611e58565b815260208082019290925260409081016000908120845181546001600160a01b03199081166001600160a01b039283161783559486015160018301805487169183169190911790559285015160028083018054871692861692909217909155606086015160038301805487169186169190911790556080860151600483018054871691861691909117905560a090950151600590910180549094169216919091179091556105716103cb36859003850185611e58565b81526020019081526020016000206040516105da919081546001600160a01b03908116825260018301548116602083015260028301548116604083015260038301548116606083015260048301548116608083015260059092015490911660a082015260c00190565b6040518091039020816040516105f09190611fad565b604051908190038120907f5846080f2085e3dfad8cb250efdba145f8982d2e81ba7f74478da7fab659322b90600090a350565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152600090600290829061066390611c1d565b81526020810191909152604001600020600201546001600160a01b0316919050565b6040805160608101825260015460ff808216835261010082048116602084015262010000909104169181019190915260009060029082906106c590611c1d565b81526020810191909152604001600020600501546001600160a01b0316919050565b6106ef611c6d565b60035460ff1680156107735750306001600160a01b0316816001600160a01b0316632d5f11876040518163ffffffff1660e01b8152600401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190611ff4565b6001600160a01b0316145b61078f5760405162461bcd60e51b81526004016103ab90612011565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517ff068c7797c3b666af662a0e2f018804080dc37610a1b82b55006872b06d30ef590600090a250565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152600090600290829061082190611c1d565b81526020810191909152604001600020600101546001600160a01b0316919050565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152600090600290829061088390611c1d565b81526020810191909152604001600020546001600160a01b0316919050565b6108aa611c6d565b6108b46000611cc7565b565b6108c082826114e0565b6108c982611a45565b5050565b6001600160a01b0382166108f35760405162461bcd60e51b81526004016103ab90612046565b6001600160a01b03811615801561090d575060035460ff16155b1561096d5760405162461bcd60e51b815260206004820152602a60248201527f6f6e6c79207265666572656e636520636f6e74726163742063616e206465706c6044820152696f79206e65772049417360b01b60648201526084016103ab565b6000826001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d19190611ff4565b90506000836001600160a01b0316636290865d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190611ff4565b90506000826001600160a01b031663f11abfd86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190611ff4565b90506000836001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190611ff4565b90506000846001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b699190611ff4565b9050336001600160a01b0316876001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611ff4565b6001600160a01b0316141580610c605750336001600160a01b0316856001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190611ff4565b6001600160a01b031614155b80610cde5750336001600160a01b0316846001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd29190611ff4565b6001600160a01b031614155b80610d5c5750336001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d509190611ff4565b6001600160a01b031614155b80610dda5750336001600160a01b0316826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dce9190611ff4565b6001600160a01b031614155b80610e585750336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611ff4565b6001600160a01b031614155b15610eb85760405162461bcd60e51b815260206004820152602a60248201527f63616c6c6572204e4f54206f776e6572206f6620616c6c20636f6e74726163746044820152691cc81a5b5c1858dd195960b21b60648201526084016103ab565b6001600160a01b038616610f3f57600480546040516352f1431b60e01b81526001600160a01b03909116916352f1431b91610ef5918b9101611d52565b6020604051808303816000875af1158015610f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f389190611ff4565b95506111e8565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152610f7790611c1d565b610fdc876001600160a01b031663fabec44a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610fb8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb919061207d565b146110445760405162461bcd60e51b815260206004820152603260248201527f76657273696f6e206f66206e65772049412068617320746f206265207468652060448201527173616d652061732063757272656e7420494160701b60648201526084016103ab565b856001600160a01b0316631320a65a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a691906120c5565b80156110cb57506110b5611856565b6001600160a01b0316866001600160a01b031614155b156111185760405162461bcd60e51b815260206004820181905260248201527f6e6577204941206973204e4f54207265666572656e636520636f6e747261637460448201526064016103ab565b6004805460405163de87aeeb60e01b81526001600160a01b039091169163de87aeeb91611147918a9101611d52565b602060405180830381865afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118891906120c5565b1580156111ae5750611198611856565b6001600160a01b0316866001600160a01b031614155b156111e85760405162461bcd60e51b815260206004820152600a602482015269696e76616c696420494160b01b60448201526064016103ab565b6040516392dd9d6560e01b81526001600160a01b038816906392dd9d6590611214908990600401611d52565b600060405180830381600087803b15801561122e57600080fd5b505af1158015611242573d6000803e3d6000fd5b50506040516392dd9d6560e01b81526001600160a01b03881692506392dd9d659150611272908990600401611d52565b600060405180830381600087803b15801561128c57600080fd5b505af11580156112a0573d6000803e3d6000fd5b50506040516392dd9d6560e01b81526001600160a01b03871692506392dd9d6591506112d0908990600401611d52565b600060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b50506040516392dd9d6560e01b81526001600160a01b03851692506392dd9d65915061132e908990600401611d52565b600060405180830381600087803b15801561134857600080fd5b505af115801561135c573d6000803e3d6000fd5b50506040516392dd9d6560e01b81526001600160a01b03841692506392dd9d65915061138c908990600401611d52565b600060405180830381600087803b1580156113a657600080fd5b505af11580156113ba573d6000803e3d6000fd5b50505050306001600160a01b0316836001600160a01b0316632d5f11876040518163ffffffff1660e01b8152600401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a9190611ff4565b6001600160a01b031603611497576040516392dd9d6560e01b81526001600160a01b038416906392dd9d6590611464908990600401611d52565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050505b856001600160a01b0316876001600160a01b03167ff79ab4f8584958d3168dac16d1d96119f728316536f50639339b4202837051c860405160405180910390a350505050505050565b6114e8611c6d565b60035460ff1661154b5760405162461bcd60e51b815260206004820152602860248201527f4f4e4c59207265666572656e636520636f6e74726163742063616e206164642060448201526776657273696f6e7360c01b60648201526084016103ab565b60006002816115626103cb36879003870187611e58565b81526020810191909152604001600020546001600160a01b0316146115c25760405162461bcd60e51b815260206004820152601660248201527576657273696f6e20616c72656164792065786973747360501b60448201526064016103ab565b60006115d46040830160208401611d7b565b6001600160a01b031614158015611604575060006115f86060830160408401611d7b565b6001600160a01b031614155b80156116295750600061161d6080830160608401611d7b565b6001600160a01b031614155b801561164e5750600061164260c0830160a08401611d7b565b6001600160a01b031614155b80156116735750600061166760a0830160808401611d7b565b6001600160a01b031614155b8015611695575060006116896020830183611d7b565b6001600160a01b031614155b6116b15760405162461bcd60e51b81526004016103ab90612046565b80600260006116c86103cb36879003870187611e58565b815260200190815260200160002081816116e29190612107565b50506040516116f29082906121ad565b6040518091039020826040516117089190611fad565b604051908190038120907faecad55510e8cbc2b82b73c5c6d78c169403cb719460198f517d41cf7700b71b90600090a35050565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152600090600290829061177c90611c1d565b81526020810191909152604001600020600301546001600160a01b0316919050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600260006117e66103cb36869003860186611e58565b81526020808201929092526040908101600020815160c08101835281546001600160a01b039081168252600183015481169482019490945260028201548416928101929092526003810154831660608301526004810154831660808301526005015490911660a082015292915050565b6000600360019054906101000a90046001600160a01b03166001600160a01b0316632d5f11876040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf9190611ff4565b905090565b6118dc611c6d565b60035460ff168015611966575060035460408051632d5f118760e01b81529051309261010090046001600160a01b031691632d5f11879160048083019260209291908290030181865afa158015611937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195b9190611ff4565b6001600160a01b0316145b6119825760405162461bcd60e51b81526004016103ab90612011565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f5fb25b36f93b3d8443f7502abdc1157f581f15db724459ffb2800fce6132a00890600090a250565b6119d4611c6d565b6001600160a01b038116611a395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ab565b611a4281611cc7565b50565b611a4d611c6d565b6040805160608101825260015460ff8082168352610100820481166020840152620100009091041691810191909152611a8590611c1d565b611a976103cb36849003840184611e58565b03611add5760405162461bcd60e51b815260206004820152601660248201527576657273696f6e20616c726561647920696e2075736560501b60448201526064016103ab565b6000600281611af46103cb36869003860186611e58565b81526020810191909152604001600020546001600160a01b031603611b6b5760405162461bcd60e51b815260206004820152602760248201527f696e76616c696420617267756d656e74202d206e6f6e206578697374696e67206044820152663b32b939b4b7b760c91b60648201526084016103ab565b806001611b788282612241565b5050604051611b88908290611fad565b604051908190038120907f0a46bc1766225d5a82bc50155575dc428902e93470e34ceaf7e0faae128fe0ab90600090a250565b6040805160608101825260015460ff80821683526101008204811660208401526201000090910416918101919091526000906002908290611bfb90611c1d565b81526020810191909152604001600020600401546001600160a01b0316919050565b805160208083015160409384015184516001600160f81b031960f895861b81168286015292851b83166021820152931b166022830152825180830360030181526023909201909252805191012090565b6000546001600160a01b031633146108b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060608284031215611d2957600080fd5b50919050565b600060608284031215611d4157600080fd5b611d4b8383611d17565b9392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114611a4257600080fd5b600060208284031215611d8d57600080fd5b8135611d4b81611d66565b600080828403610120811215611dad57600080fd5b611db78585611d17565b925060c0605f1982011215611dcb57600080fd5b506060830190509250929050565b60008060408385031215611dec57600080fd5b8235611df781611d66565b91506020830135611e0781611d66565b809150509250929050565b6040516060810167ffffffffffffffff81118282101715611e4357634e487b7160e01b600052604160045260246000fd5b60405290565b60ff81168114611a4257600080fd5b600060608284031215611e6a57600080fd5b611e72611e12565b8235611e7d81611e49565b81526020830135611e8d81611e49565b60208201526040830135611ea081611e49565b60408201529392505050565b606081018235611ebb81611e49565b60ff1682526020830135611ece81611e49565b60ff1660208301526040830135611ee481611e49565b60ff811660408401525092915050565b600060c08284031215611f0657600080fd5b60405160c0810181811067ffffffffffffffff82111715611f3757634e487b7160e01b600052604160045260246000fd5b6040528251611f4581611d66565b81526020830151611f5581611d66565b60208201526040830151611f6881611d66565b60408201526060830151611f7b81611d66565b60608201526080830151611f8e81611d66565b608082015260a0830151611fa181611d66565b60a08201529392505050565b60008235611fba81611e49565b60ff1682526020830135611fcd81611e49565b60ff1660208301526040830135611fe381611e49565b60ff16604083015250606001919050565b60006020828403121561200657600080fd5b8151611d4b81611d66565b6020808252818101527f6f6e6c79207265666572656e636520636f6e74726163742063616e2063616c6c604082015260600190565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60006060828403121561208f57600080fd5b612097611e12565b82516120a281611e49565b815260208301516120b281611e49565b60208201526040830151611ea081611e49565b6000602082840312156120d757600080fd5b81518015158114611d4b57600080fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b813561211281611d66565b61211c81836120e7565b50602082013561212b81611d66565b61213881600184016120e7565b50604082013561214781611d66565b61215481600284016120e7565b50606082013561216381611d66565b61217081600384016120e7565b50608082013561217f81611d66565b61218c81600484016120e7565b5060a082013561219b81611d66565b6121a881600584016120e7565b505050565b600082356121ba81611d66565b6001600160a01b0390811683526020840135906121d682611d66565b90811660208401526040840135906121ed82611d66565b908116604084015260608401359061220482611d66565b908116606084015260808401359061221b82611d66565b908116608084015260a08401359061223282611d66565b1660a08301525060c001919050565b813561224c81611e49565b60ff8116905081548160ff198216178355602084013561226b81611e49565b61ff008160081b169050808361ffff19841617178455604085013561228f81611e49565b62ff00008160101b168462ffffff19851617831717855550505050505056fea2646970667358221220e9ef53539a517239a7e340b00c3c2ecd7a20f46ad4e12086d47de6182bbe0fdc64736f6c63430008110033";

type TREXImplementationAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TREXImplementationAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TREXImplementationAuthority__factory extends ContractFactory {
  constructor(...args: TREXImplementationAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    referenceStatus: PromiseOrValue<boolean>,
    trexFactory: PromiseOrValue<string>,
    iaFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TREXImplementationAuthority> {
    return super.deploy(
      referenceStatus,
      trexFactory,
      iaFactory,
      overrides || {}
    ) as Promise<TREXImplementationAuthority>;
  }
  override getDeployTransaction(
    referenceStatus: PromiseOrValue<boolean>,
    trexFactory: PromiseOrValue<string>,
    iaFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      referenceStatus,
      trexFactory,
      iaFactory,
      overrides || {}
    );
  }
  override attach(address: string): TREXImplementationAuthority {
    return super.attach(address) as TREXImplementationAuthority;
  }
  override connect(signer: Signer): TREXImplementationAuthority__factory {
    return super.connect(signer) as TREXImplementationAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TREXImplementationAuthorityInterface {
    return new utils.Interface(_abi) as TREXImplementationAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TREXImplementationAuthority {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TREXImplementationAuthority;
  }
}
