/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IIAFactory,
  IIAFactoryInterface,
} from "../../../../../../@tokenysolutions/t-rex/contracts/proxy/authority/IIAFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_ia",
        type: "address",
      },
    ],
    name: "ImplementationAuthorityDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deployIA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ia",
        type: "address",
      },
    ],
    name: "deployedByFactory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IIAFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IIAFactoryInterface {
    return new utils.Interface(_abi) as IIAFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIAFactory {
    return new Contract(address, _abi, signerOrProvider) as IIAFactory;
  }
}
