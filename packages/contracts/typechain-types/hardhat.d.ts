/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ClaimIssuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimIssuer__factory>;
    getContractFactory(
      name: "IIdFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdFactory__factory>;
    getContractFactory(
      name: "Identity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Identity__factory>;
    getContractFactory(
      name: "IClaimIssuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimIssuer__factory>;
    getContractFactory(
      name: "IERC734",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC734__factory>;
    getContractFactory(
      name: "IERC735",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC735__factory>;
    getContractFactory(
      name: "IIdentity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentity__factory>;
    getContractFactory(
      name: "Version",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Version__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805__factory>;
    getContractFactory(
      name: "IERC6372",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6372__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "ITransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BasicCompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicCompliance__factory>;
    getContractFactory(
      name: "DefaultCompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DefaultCompliance__factory>;
    getContractFactory(
      name: "ICompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICompliance__factory>;
    getContractFactory(
      name: "IModularCompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModularCompliance__factory>;
    getContractFactory(
      name: "ModularCompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModularCompliance__factory>;
    getContractFactory(
      name: "IModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModule__factory>;
    getContractFactory(
      name: "ITREXFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITREXFactory__factory>;
    getContractFactory(
      name: "TREXFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TREXFactory__factory>;
    getContractFactory(
      name: "AbstractProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractProxy__factory>;
    getContractFactory(
      name: "IIAFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIAFactory__factory>;
    getContractFactory(
      name: "ITREXImplementationAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITREXImplementationAuthority__factory>;
    getContractFactory(
      name: "TREXImplementationAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TREXImplementationAuthority__factory>;
    getContractFactory(
      name: "ClaimTopicsRegistryProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimTopicsRegistryProxy__factory>;
    getContractFactory(
      name: "IdentityRegistryProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityRegistryProxy__factory>;
    getContractFactory(
      name: "IdentityRegistryStorageProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityRegistryStorageProxy__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "ModularComplianceProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModularComplianceProxy__factory>;
    getContractFactory(
      name: "TokenProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenProxy__factory>;
    getContractFactory(
      name: "TrustedIssuersRegistryProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrustedIssuersRegistryProxy__factory>;
    getContractFactory(
      name: "ClaimTopicsRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimTopicsRegistry__factory>;
    getContractFactory(
      name: "IdentityRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityRegistry__factory>;
    getContractFactory(
      name: "IdentityRegistryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityRegistryStorage__factory>;
    getContractFactory(
      name: "TrustedIssuersRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrustedIssuersRegistry__factory>;
    getContractFactory(
      name: "IClaimTopicsRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimTopicsRegistry__factory>;
    getContractFactory(
      name: "IIdentityRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentityRegistry__factory>;
    getContractFactory(
      name: "IIdentityRegistryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentityRegistryStorage__factory>;
    getContractFactory(
      name: "ITrustedIssuersRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITrustedIssuersRegistry__factory>;
    getContractFactory(
      name: "AgentRole",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AgentRole__factory>;
    getContractFactory(
      name: "AgentRoleUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AgentRoleUpgradeable__factory>;
    getContractFactory(
      name: "IToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IToken__factory>;
    getContractFactory(
      name: "TRexIAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIAccessControl__factory>;
    getContractFactory(
      name: "TRexIBond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIBond__factory>;
    getContractFactory(
      name: "TRexIBondRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIBondRead__factory>;
    getContractFactory(
      name: "TRexIBusinessLogicResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIBusinessLogicResolver__factory>;
    getContractFactory(
      name: "TRexIDiamondCutManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIDiamondCutManager__factory>;
    getContractFactory(
      name: "TRexIDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIDiamondLoupe__factory>;
    getContractFactory(
      name: "TRexIEquity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIEquity__factory>;
    getContractFactory(
      name: "TRexIERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIERC20__factory>;
    getContractFactory(
      name: "TRexIFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIFactory__factory>;
    getContractFactory(
      name: "TRexIResolverProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIResolverProxy__factory>;
    getContractFactory(
      name: "TRexIStaticFunctionSelectors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TRexIStaticFunctionSelectors__factory>;
    getContractFactory(
      name: "TREXBaseDeploymentLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TREXBaseDeploymentLib__factory>;
    getContractFactory(
      name: "TREXFactoryAts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TREXFactoryAts__factory>;
    getContractFactory(
      name: "Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Factory__factory>;
    getContractFactory(
      name: "IFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactory__factory>;
    getContractFactory(
      name: "IDiamondCutManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCutManager__factory>;
    getContractFactory(
      name: "IBusinessLogicResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBusinessLogicResolver__factory>;
    getContractFactory(
      name: "IBusinessLogicResolverWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBusinessLogicResolverWrapper__factory>;
    getContractFactory(
      name: "IDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamond__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IResolverProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IResolverProxy__factory>;
    getContractFactory(
      name: "IStaticFunctionSelectors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaticFunctionSelectors__factory>;
    getContractFactory(
      name: "AdjustBalancesStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdjustBalancesStorageWrapper1__factory>;
    getContractFactory(
      name: "AdjustBalancesStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdjustBalancesStorageWrapper2__factory>;
    getContractFactory(
      name: "BondStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondStorageWrapper__factory>;
    getContractFactory(
      name: "CapStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CapStorageWrapper1__factory>;
    getContractFactory(
      name: "CapStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CapStorageWrapper2__factory>;
    getContractFactory(
      name: "ClearingStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingStorageWrapper1__factory>;
    getContractFactory(
      name: "ClearingStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingStorageWrapper2__factory>;
    getContractFactory(
      name: "ArrayLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayLib__factory>;
    getContractFactory(
      name: "Eip1066",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Eip1066__factory>;
    getContractFactory(
      name: "LocalContext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LocalContext__factory>;
    getContractFactory(
      name: "AccessControlStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlStorageWrapper__factory>;
    getContractFactory(
      name: "ControlListStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ControlListStorageWrapper__factory>;
    getContractFactory(
      name: "ExternalControlListManagementStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalControlListManagementStorageWrapper__factory>;
    getContractFactory(
      name: "ExternalKycListManagementStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalKycListManagementStorageWrapper__factory>;
    getContractFactory(
      name: "ExternalListManagementStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalListManagementStorageWrapper__factory>;
    getContractFactory(
      name: "ExternalPauseManagementStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalPauseManagementStorageWrapper__factory>;
    getContractFactory(
      name: "KycStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KycStorageWrapper__factory>;
    getContractFactory(
      name: "PauseStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseStorageWrapper__factory>;
    getContractFactory(
      name: "ProtectedPartitionsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtectedPartitionsStorageWrapper__factory>;
    getContractFactory(
      name: "SsiManagementStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SsiManagementStorageWrapper__factory>;
    getContractFactory(
      name: "CorporateActionsStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CorporateActionsStorageWrapper1__factory>;
    getContractFactory(
      name: "CorporateActionsStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CorporateActionsStorageWrapper2__factory>;
    getContractFactory(
      name: "EquityStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EquityStorageWrapper__factory>;
    getContractFactory(
      name: "ERC1410BasicStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410BasicStorageWrapper__factory>;
    getContractFactory(
      name: "ERC1410BasicStorageWrapperRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410BasicStorageWrapperRead__factory>;
    getContractFactory(
      name: "ERC1410OperatorStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410OperatorStorageWrapper__factory>;
    getContractFactory(
      name: "ERC1410ProtectedPartitionsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410ProtectedPartitionsStorageWrapper__factory>;
    getContractFactory(
      name: "ERC1410StandardStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410StandardStorageWrapper__factory>;
    getContractFactory(
      name: "ERC1594StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1594StorageWrapper__factory>;
    getContractFactory(
      name: "ERC1644StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1644StorageWrapper__factory>;
    getContractFactory(
      name: "ERC20StorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20StorageWrapper1__factory>;
    getContractFactory(
      name: "ERC20StorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20StorageWrapper2__factory>;
    getContractFactory(
      name: "ERC20PermitStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitStorageWrapper__factory>;
    getContractFactory(
      name: "ERC20VotesStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20VotesStorageWrapper__factory>;
    getContractFactory(
      name: "ERC3643StorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643StorageWrapper1__factory>;
    getContractFactory(
      name: "ERC3643StorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643StorageWrapper2__factory>;
    getContractFactory(
      name: "HoldStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldStorageWrapper1__factory>;
    getContractFactory(
      name: "HoldStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldStorageWrapper2__factory>;
    getContractFactory(
      name: "LockStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LockStorageWrapper1__factory>;
    getContractFactory(
      name: "LockStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LockStorageWrapper2__factory>;
    getContractFactory(
      name: "ScheduledBalanceAdjustmentsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledBalanceAdjustmentsStorageWrapper__factory>;
    getContractFactory(
      name: "ScheduledSnapshotsStorageWrapperRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledSnapshotsStorageWrapperRead__factory>;
    getContractFactory(
      name: "ScheduledTasksStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledTasksStorageWrapper__factory>;
    getContractFactory(
      name: "ScheduledTasksCommon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledTasksCommon__factory>;
    getContractFactory(
      name: "SecurityStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SecurityStorageWrapper__factory>;
    getContractFactory(
      name: "SnapshotsStorageWrapper1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotsStorageWrapper1__factory>;
    getContractFactory(
      name: "SnapshotsStorageWrapper2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotsStorageWrapper2__factory>;
    getContractFactory(
      name: "TransferAndLockStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferAndLockStorageWrapper__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlFacet__factory>;
    getContractFactory(
      name: "Cap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cap__factory>;
    getContractFactory(
      name: "ClearingActionsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingActionsFacet__factory>;
    getContractFactory(
      name: "ClearingHoldCreationFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHoldCreationFacet__factory>;
    getContractFactory(
      name: "ClearingReadFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingReadFacet__factory>;
    getContractFactory(
      name: "ClearingRedeemFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingRedeemFacet__factory>;
    getContractFactory(
      name: "ClearingTransferFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingTransferFacet__factory>;
    getContractFactory(
      name: "Common",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Common__factory>;
    getContractFactory(
      name: "ControlList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ControlList__factory>;
    getContractFactory(
      name: "CorporateActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CorporateActions__factory>;
    getContractFactory(
      name: "ERC1410Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410Management__factory>;
    getContractFactory(
      name: "ERC1410ManagementFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410ManagementFacet__factory>;
    getContractFactory(
      name: "ERC1410Read",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410Read__factory>;
    getContractFactory(
      name: "ERC1410ReadFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410ReadFacet__factory>;
    getContractFactory(
      name: "ERC1410TokenHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410TokenHolder__factory>;
    getContractFactory(
      name: "ERC1410TokenHolderFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410TokenHolderFacet__factory>;
    getContractFactory(
      name: "ERC1594",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1594__factory>;
    getContractFactory(
      name: "ERC1643",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1643__factory>;
    getContractFactory(
      name: "ERC1644",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1644__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Votes__factory>;
    getContractFactory(
      name: "ERC3643Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643Management__factory>;
    getContractFactory(
      name: "ERC3643Batch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643Batch__factory>;
    getContractFactory(
      name: "ERC3643BatchFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643BatchFacet__factory>;
    getContractFactory(
      name: "ERC3643ManagementFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643ManagementFacet__factory>;
    getContractFactory(
      name: "ERC3643Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643Management__factory>;
    getContractFactory(
      name: "ERC3643ManagementFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643ManagementFacet__factory>;
    getContractFactory(
      name: "ERC3643Operations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643Operations__factory>;
    getContractFactory(
      name: "ERC3643OperationsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643OperationsFacet__factory>;
    getContractFactory(
      name: "ERC3643Read",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643Read__factory>;
    getContractFactory(
      name: "ERC3643ReadFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643ReadFacet__factory>;
    getContractFactory(
      name: "ExternalControlListManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalControlListManagement__factory>;
    getContractFactory(
      name: "ExternalKycListManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalKycListManagement__factory>;
    getContractFactory(
      name: "ExternalPauseManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalPauseManagement__factory>;
    getContractFactory(
      name: "Freeze",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Freeze__factory>;
    getContractFactory(
      name: "FreezeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreezeFacet__factory>;
    getContractFactory(
      name: "HoldManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldManagement__factory>;
    getContractFactory(
      name: "HoldManagementFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldManagementFacet__factory>;
    getContractFactory(
      name: "HoldRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldRead__factory>;
    getContractFactory(
      name: "HoldReadFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldReadFacet__factory>;
    getContractFactory(
      name: "HoldTokenHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldTokenHolder__factory>;
    getContractFactory(
      name: "HoldTokenHolderFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldTokenHolderFacet__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlStorageWrapper__factory>;
    getContractFactory(
      name: "ICap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICap__factory>;
    getContractFactory(
      name: "ICapStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICapStorageWrapper__factory>;
    getContractFactory(
      name: "IClearing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearing__factory>;
    getContractFactory(
      name: "IClearingActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingActions__factory>;
    getContractFactory(
      name: "IClearingHoldCreation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHoldCreation__factory>;
    getContractFactory(
      name: "IClearingRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingRead__factory>;
    getContractFactory(
      name: "IClearingRedeem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingRedeem__factory>;
    getContractFactory(
      name: "IClearingStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingStorageWrapper__factory>;
    getContractFactory(
      name: "IClearingTransfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingTransfer__factory>;
    getContractFactory(
      name: "IControlList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IControlList__factory>;
    getContractFactory(
      name: "IControlListStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IControlListStorageWrapper__factory>;
    getContractFactory(
      name: "ICorporateActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICorporateActions__factory>;
    getContractFactory(
      name: "ICorporateActionsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICorporateActionsStorageWrapper__factory>;
    getContractFactory(
      name: "IERC1410",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1410__factory>;
    getContractFactory(
      name: "IERC1410Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1410Management__factory>;
    getContractFactory(
      name: "IERC1410Read",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1410Read__factory>;
    getContractFactory(
      name: "IERC1410StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1410StorageWrapper__factory>;
    getContractFactory(
      name: "IERC1410TokenHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1410TokenHolder__factory>;
    getContractFactory(
      name: "IERC1594",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1594__factory>;
    getContractFactory(
      name: "IERC1594StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1594StorageWrapper__factory>;
    getContractFactory(
      name: "IERC1643",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1643__factory>;
    getContractFactory(
      name: "IERC1644",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1644__factory>;
    getContractFactory(
      name: "IERC1644StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1644StorageWrapper__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20StorageWrapper__factory>;
    getContractFactory(
      name: "IERC20Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Votes__factory>;
    getContractFactory(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "ICompliance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICompliance__factory>;
    getContractFactory(
      name: "IERC3643",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643__factory>;
    getContractFactory(
      name: "IERC3643Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643Management__factory>;
    getContractFactory(
      name: "IERC3643Batch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643Batch__factory>;
    getContractFactory(
      name: "IERC3643Management",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643Management__factory>;
    getContractFactory(
      name: "IERC3643Operations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643Operations__factory>;
    getContractFactory(
      name: "IERC3643Read",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643Read__factory>;
    getContractFactory(
      name: "IERC3643StorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3643StorageWrapper__factory>;
    getContractFactory(
      name: "IFreeze",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFreeze__factory>;
    getContractFactory(
      name: "IIdentityRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentityRegistry__factory>;
    getContractFactory(
      name: "IExternalControlList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalControlList__factory>;
    getContractFactory(
      name: "IExternalControlListManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalControlListManagement__factory>;
    getContractFactory(
      name: "IExternalKycList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalKycList__factory>;
    getContractFactory(
      name: "IExternalKycListManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalKycListManagement__factory>;
    getContractFactory(
      name: "IExternalPause",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalPause__factory>;
    getContractFactory(
      name: "IExternalPauseManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalPauseManagement__factory>;
    getContractFactory(
      name: "IFreeze",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFreeze__factory>;
    getContractFactory(
      name: "IHold",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHold__factory>;
    getContractFactory(
      name: "IHoldManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHoldManagement__factory>;
    getContractFactory(
      name: "IHoldRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHoldRead__factory>;
    getContractFactory(
      name: "IHoldTokenHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHoldTokenHolder__factory>;
    getContractFactory(
      name: "IKyc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKyc__factory>;
    getContractFactory(
      name: "IRevocationList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRevocationList__factory>;
    getContractFactory(
      name: "ILock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILock__factory>;
    getContractFactory(
      name: "IPause",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPause__factory>;
    getContractFactory(
      name: "IPauseStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPauseStorageWrapper__factory>;
    getContractFactory(
      name: "IProtectedPartitions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtectedPartitions__factory>;
    getContractFactory(
      name: "IProtectedPartitionsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtectedPartitionsStorageWrapper__factory>;
    getContractFactory(
      name: "ISnapshots",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISnapshots__factory>;
    getContractFactory(
      name: "ISnapshotsStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISnapshotsStorageWrapper__factory>;
    getContractFactory(
      name: "ISsiManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISsiManagement__factory>;
    getContractFactory(
      name: "Kyc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Kyc__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lock__factory>;
    getContractFactory(
      name: "Pause",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pause__factory>;
    getContractFactory(
      name: "PauseFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseFacet__factory>;
    getContractFactory(
      name: "ProtectedPartitions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtectedPartitions__factory>;
    getContractFactory(
      name: "Snapshots",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Snapshots__factory>;
    getContractFactory(
      name: "SsiManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SsiManagement__factory>;
    getContractFactory(
      name: "AdjustBalances",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdjustBalances__factory>;
    getContractFactory(
      name: "Bond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bond__factory>;
    getContractFactory(
      name: "BondRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondRead__factory>;
    getContractFactory(
      name: "Equity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Equity__factory>;
    getContractFactory(
      name: "IAdjustBalances",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAdjustBalances__factory>;
    getContractFactory(
      name: "IAdjustBalancesStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAdjustBalancesStorageWrapper__factory>;
    getContractFactory(
      name: "IBond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBond__factory>;
    getContractFactory(
      name: "IBondRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondRead__factory>;
    getContractFactory(
      name: "IBondStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondStorageWrapper__factory>;
    getContractFactory(
      name: "IEquity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEquity__factory>;
    getContractFactory(
      name: "IEquityStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEquityStorageWrapper__factory>;
    getContractFactory(
      name: "IScheduledBalanceAdjustments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScheduledBalanceAdjustments__factory>;
    getContractFactory(
      name: "IScheduledSnapshots",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScheduledSnapshots__factory>;
    getContractFactory(
      name: "IScheduledTasks",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScheduledTasks__factory>;
    getContractFactory(
      name: "ScheduledBalanceAdjustments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledBalanceAdjustments__factory>;
    getContractFactory(
      name: "ScheduledSnapshots",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledSnapshots__factory>;
    getContractFactory(
      name: "ScheduledTasks",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledTasks__factory>;
    getContractFactory(
      name: "BondUSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondUSA__factory>;
    getContractFactory(
      name: "BondUSARead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondUSARead__factory>;
    getContractFactory(
      name: "EquityUSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EquityUSA__factory>;
    getContractFactory(
      name: "IBondUSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondUSA__factory>;
    getContractFactory(
      name: "IEquityUSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEquityUSA__factory>;
    getContractFactory(
      name: "ISecurity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISecurity__factory>;
    getContractFactory(
      name: "ITransferAndLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransferAndLock__factory>;
    getContractFactory(
      name: "ITransferAndLockStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransferAndLockStorageWrapper__factory>;
    getContractFactory(
      name: "Security",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Security__factory>;
    getContractFactory(
      name: "TransferAndLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferAndLock__factory>;
    getContractFactory(
      name: "MockedBlacklist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockedBlacklist__factory>;
    getContractFactory(
      name: "MockedExternalKycList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockedExternalKycList__factory>;
    getContractFactory(
      name: "MockedExternalPause",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockedExternalPause__factory>;
    getContractFactory(
      name: "MockedWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockedWhitelist__factory>;
    getContractFactory(
      name: "MockedT3RevocationRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockedT3RevocationRegistry__factory>;
    getContractFactory(
      name: "BusinessLogicResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BusinessLogicResolver__factory>;
    getContractFactory(
      name: "BusinessLogicResolverWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BusinessLogicResolverWrapper__factory>;
    getContractFactory(
      name: "DiamondCutManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutManager__factory>;
    getContractFactory(
      name: "DiamondCutManagerWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutManagerWrapper__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "ResolverProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ResolverProxy__factory>;
    getContractFactory(
      name: "ResolverProxyUnstructured",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ResolverProxyUnstructured__factory>;
    getContractFactory(
      name: "ComplianceMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComplianceMock__factory>;
    getContractFactory(
      name: "IdentityRegistryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityRegistryMock__factory>;
    getContractFactory(
      name: "AccessControlFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlFacetTimeTravel__factory>;
    getContractFactory(
      name: "AdjustBalancesTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdjustBalancesTimeTravel__factory>;
    getContractFactory(
      name: "BondUSAReadTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondUSAReadTimeTravel__factory>;
    getContractFactory(
      name: "BondUSATimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondUSATimeTravel__factory>;
    getContractFactory(
      name: "CapTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CapTimeTravel__factory>;
    getContractFactory(
      name: "ClearingActionsFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingActionsFacetTimeTravel__factory>;
    getContractFactory(
      name: "ClearingHoldCreationFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHoldCreationFacetTimeTravel__factory>;
    getContractFactory(
      name: "ClearingReadFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingReadFacetTimeTravel__factory>;
    getContractFactory(
      name: "ClearingRedeemFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingRedeemFacetTimeTravel__factory>;
    getContractFactory(
      name: "ClearingTransferFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingTransferFacetTimeTravel__factory>;
    getContractFactory(
      name: "ControlListTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ControlListTimeTravel__factory>;
    getContractFactory(
      name: "CorporateActionsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CorporateActionsTimeTravel__factory>;
    getContractFactory(
      name: "EquityUSATimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EquityUSATimeTravel__factory>;
    getContractFactory(
      name: "ERC1410ManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410ManagementTimeTravel__factory>;
    getContractFactory(
      name: "ERC1410ReadTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410ReadTimeTravel__factory>;
    getContractFactory(
      name: "ERC1410TokenHolderTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1410TokenHolderTimeTravel__factory>;
    getContractFactory(
      name: "ERC1594TimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1594TimeTravel__factory>;
    getContractFactory(
      name: "ERC1643TimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1643TimeTravel__factory>;
    getContractFactory(
      name: "ERC1644TimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1644TimeTravel__factory>;
    getContractFactory(
      name: "ERC20PermitTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitTimeTravel__factory>;
    getContractFactory(
      name: "ERC20TimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20TimeTravel__factory>;
    getContractFactory(
      name: "ERC20VotesTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20VotesTimeTravel__factory>;
    getContractFactory(
      name: "ERC3643BatchTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643BatchTimeTravel__factory>;
    getContractFactory(
      name: "ERC3643ManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643ManagementTimeTravel__factory>;
    getContractFactory(
      name: "ERC3643OperationsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643OperationsTimeTravel__factory>;
    getContractFactory(
      name: "ERC3643ReadTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3643ReadTimeTravel__factory>;
    getContractFactory(
      name: "BondUSAReadTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondUSAReadTimeTravel__factory>;
    getContractFactory(
      name: "ExternalControlListManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalControlListManagementTimeTravel__factory>;
    getContractFactory(
      name: "ExternalKycListManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalKycListManagementTimeTravel__factory>;
    getContractFactory(
      name: "ExternalPauseManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalPauseManagementTimeTravel__factory>;
    getContractFactory(
      name: "FreezeFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreezeFacetTimeTravel__factory>;
    getContractFactory(
      name: "HoldManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldManagementTimeTravel__factory>;
    getContractFactory(
      name: "HoldReadTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldReadTimeTravel__factory>;
    getContractFactory(
      name: "HoldTokenHolderTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HoldTokenHolderTimeTravel__factory>;
    getContractFactory(
      name: "KycTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KycTimeTravel__factory>;
    getContractFactory(
      name: "LockTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LockTimeTravel__factory>;
    getContractFactory(
      name: "PauseFacetTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseFacetTimeTravel__factory>;
    getContractFactory(
      name: "ProtectedPartitionsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtectedPartitionsTimeTravel__factory>;
    getContractFactory(
      name: "ScheduledBalanceAdjustmentsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledBalanceAdjustmentsTimeTravel__factory>;
    getContractFactory(
      name: "ScheduledSnapshotsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledSnapshotsTimeTravel__factory>;
    getContractFactory(
      name: "ScheduledTasksTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScheduledTasksTimeTravel__factory>;
    getContractFactory(
      name: "SnapshotsTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotsTimeTravel__factory>;
    getContractFactory(
      name: "SsiManagementTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SsiManagementTimeTravel__factory>;
    getContractFactory(
      name: "TransferAndLockTimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferAndLockTimeTravel__factory>;
    getContractFactory(
      name: "ITimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimeTravel__factory>;
    getContractFactory(
      name: "ITimeTravelStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimeTravelStorageWrapper__factory>;
    getContractFactory(
      name: "TimeTravel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimeTravel__factory>;
    getContractFactory(
      name: "TimeTravelStorageWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimeTravelStorageWrapper__factory>;

    getContractAt(
      name: "ClaimIssuer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimIssuer>;
    getContractAt(
      name: "IIdFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdFactory>;
    getContractAt(
      name: "Identity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Identity>;
    getContractAt(
      name: "IClaimIssuer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimIssuer>;
    getContractAt(
      name: "IERC734",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC734>;
    getContractAt(
      name: "IERC735",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC735>;
    getContractAt(
      name: "IIdentity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentity>;
    getContractAt(
      name: "Version",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Version>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1967",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IERC5805",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805>;
    getContractAt(
      name: "IERC6372",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6372>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "ITransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransparentUpgradeableProxy>;
    getContractAt(
      name: "TransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransparentUpgradeableProxy>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BasicCompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicCompliance>;
    getContractAt(
      name: "DefaultCompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DefaultCompliance>;
    getContractAt(
      name: "ICompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICompliance>;
    getContractAt(
      name: "IModularCompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IModularCompliance>;
    getContractAt(
      name: "ModularCompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ModularCompliance>;
    getContractAt(
      name: "IModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IModule>;
    getContractAt(
      name: "ITREXFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITREXFactory>;
    getContractAt(
      name: "TREXFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TREXFactory>;
    getContractAt(
      name: "AbstractProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractProxy>;
    getContractAt(
      name: "IIAFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIAFactory>;
    getContractAt(
      name: "ITREXImplementationAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITREXImplementationAuthority>;
    getContractAt(
      name: "TREXImplementationAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TREXImplementationAuthority>;
    getContractAt(
      name: "ClaimTopicsRegistryProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimTopicsRegistryProxy>;
    getContractAt(
      name: "IdentityRegistryProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityRegistryProxy>;
    getContractAt(
      name: "IdentityRegistryStorageProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityRegistryStorageProxy>;
    getContractAt(
      name: "IProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "ModularComplianceProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ModularComplianceProxy>;
    getContractAt(
      name: "TokenProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenProxy>;
    getContractAt(
      name: "TrustedIssuersRegistryProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrustedIssuersRegistryProxy>;
    getContractAt(
      name: "ClaimTopicsRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimTopicsRegistry>;
    getContractAt(
      name: "IdentityRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityRegistry>;
    getContractAt(
      name: "IdentityRegistryStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityRegistryStorage>;
    getContractAt(
      name: "TrustedIssuersRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrustedIssuersRegistry>;
    getContractAt(
      name: "IClaimTopicsRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimTopicsRegistry>;
    getContractAt(
      name: "IIdentityRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentityRegistry>;
    getContractAt(
      name: "IIdentityRegistryStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentityRegistryStorage>;
    getContractAt(
      name: "ITrustedIssuersRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITrustedIssuersRegistry>;
    getContractAt(
      name: "AgentRole",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AgentRole>;
    getContractAt(
      name: "AgentRoleUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AgentRoleUpgradeable>;
    getContractAt(
      name: "IToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IToken>;
    getContractAt(
      name: "TRexIAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIAccessControl>;
    getContractAt(
      name: "TRexIBond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIBond>;
    getContractAt(
      name: "TRexIBondRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIBondRead>;
    getContractAt(
      name: "TRexIBusinessLogicResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIBusinessLogicResolver>;
    getContractAt(
      name: "TRexIDiamondCutManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIDiamondCutManager>;
    getContractAt(
      name: "TRexIDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIDiamondLoupe>;
    getContractAt(
      name: "TRexIEquity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIEquity>;
    getContractAt(
      name: "TRexIERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIERC20>;
    getContractAt(
      name: "TRexIFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIFactory>;
    getContractAt(
      name: "TRexIResolverProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIResolverProxy>;
    getContractAt(
      name: "TRexIStaticFunctionSelectors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TRexIStaticFunctionSelectors>;
    getContractAt(
      name: "TREXBaseDeploymentLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TREXBaseDeploymentLib>;
    getContractAt(
      name: "TREXFactoryAts",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TREXFactoryAts>;
    getContractAt(
      name: "Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Factory>;
    getContractAt(
      name: "IFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactory>;
    getContractAt(
      name: "IDiamondCutManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCutManager>;
    getContractAt(
      name: "IBusinessLogicResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBusinessLogicResolver>;
    getContractAt(
      name: "IBusinessLogicResolverWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBusinessLogicResolverWrapper>;
    getContractAt(
      name: "IDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamond>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IResolverProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IResolverProxy>;
    getContractAt(
      name: "IStaticFunctionSelectors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaticFunctionSelectors>;
    getContractAt(
      name: "AdjustBalancesStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdjustBalancesStorageWrapper1>;
    getContractAt(
      name: "AdjustBalancesStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdjustBalancesStorageWrapper2>;
    getContractAt(
      name: "BondStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondStorageWrapper>;
    getContractAt(
      name: "CapStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CapStorageWrapper1>;
    getContractAt(
      name: "CapStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CapStorageWrapper2>;
    getContractAt(
      name: "ClearingStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingStorageWrapper1>;
    getContractAt(
      name: "ClearingStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingStorageWrapper2>;
    getContractAt(
      name: "ArrayLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayLib>;
    getContractAt(
      name: "Eip1066",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Eip1066>;
    getContractAt(
      name: "LocalContext",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LocalContext>;
    getContractAt(
      name: "AccessControlStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlStorageWrapper>;
    getContractAt(
      name: "ControlListStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ControlListStorageWrapper>;
    getContractAt(
      name: "ExternalControlListManagementStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalControlListManagementStorageWrapper>;
    getContractAt(
      name: "ExternalKycListManagementStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalKycListManagementStorageWrapper>;
    getContractAt(
      name: "ExternalListManagementStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalListManagementStorageWrapper>;
    getContractAt(
      name: "ExternalPauseManagementStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalPauseManagementStorageWrapper>;
    getContractAt(
      name: "KycStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KycStorageWrapper>;
    getContractAt(
      name: "PauseStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseStorageWrapper>;
    getContractAt(
      name: "ProtectedPartitionsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtectedPartitionsStorageWrapper>;
    getContractAt(
      name: "SsiManagementStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SsiManagementStorageWrapper>;
    getContractAt(
      name: "CorporateActionsStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CorporateActionsStorageWrapper1>;
    getContractAt(
      name: "CorporateActionsStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CorporateActionsStorageWrapper2>;
    getContractAt(
      name: "EquityStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EquityStorageWrapper>;
    getContractAt(
      name: "ERC1410BasicStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410BasicStorageWrapper>;
    getContractAt(
      name: "ERC1410BasicStorageWrapperRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410BasicStorageWrapperRead>;
    getContractAt(
      name: "ERC1410OperatorStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410OperatorStorageWrapper>;
    getContractAt(
      name: "ERC1410ProtectedPartitionsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410ProtectedPartitionsStorageWrapper>;
    getContractAt(
      name: "ERC1410StandardStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410StandardStorageWrapper>;
    getContractAt(
      name: "ERC1594StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1594StorageWrapper>;
    getContractAt(
      name: "ERC1644StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1644StorageWrapper>;
    getContractAt(
      name: "ERC20StorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20StorageWrapper1>;
    getContractAt(
      name: "ERC20StorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20StorageWrapper2>;
    getContractAt(
      name: "ERC20PermitStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitStorageWrapper>;
    getContractAt(
      name: "ERC20VotesStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20VotesStorageWrapper>;
    getContractAt(
      name: "ERC3643StorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643StorageWrapper1>;
    getContractAt(
      name: "ERC3643StorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643StorageWrapper2>;
    getContractAt(
      name: "HoldStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldStorageWrapper1>;
    getContractAt(
      name: "HoldStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldStorageWrapper2>;
    getContractAt(
      name: "LockStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LockStorageWrapper1>;
    getContractAt(
      name: "LockStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LockStorageWrapper2>;
    getContractAt(
      name: "ScheduledBalanceAdjustmentsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledBalanceAdjustmentsStorageWrapper>;
    getContractAt(
      name: "ScheduledSnapshotsStorageWrapperRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledSnapshotsStorageWrapperRead>;
    getContractAt(
      name: "ScheduledTasksStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledTasksStorageWrapper>;
    getContractAt(
      name: "ScheduledTasksCommon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledTasksCommon>;
    getContractAt(
      name: "SecurityStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SecurityStorageWrapper>;
    getContractAt(
      name: "SnapshotsStorageWrapper1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SnapshotsStorageWrapper1>;
    getContractAt(
      name: "SnapshotsStorageWrapper2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SnapshotsStorageWrapper2>;
    getContractAt(
      name: "TransferAndLockStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferAndLockStorageWrapper>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlFacet>;
    getContractAt(
      name: "Cap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Cap>;
    getContractAt(
      name: "ClearingActionsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingActionsFacet>;
    getContractAt(
      name: "ClearingHoldCreationFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHoldCreationFacet>;
    getContractAt(
      name: "ClearingReadFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingReadFacet>;
    getContractAt(
      name: "ClearingRedeemFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingRedeemFacet>;
    getContractAt(
      name: "ClearingTransferFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingTransferFacet>;
    getContractAt(
      name: "Common",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Common>;
    getContractAt(
      name: "ControlList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ControlList>;
    getContractAt(
      name: "CorporateActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CorporateActions>;
    getContractAt(
      name: "ERC1410Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410Management>;
    getContractAt(
      name: "ERC1410ManagementFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410ManagementFacet>;
    getContractAt(
      name: "ERC1410Read",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410Read>;
    getContractAt(
      name: "ERC1410ReadFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410ReadFacet>;
    getContractAt(
      name: "ERC1410TokenHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410TokenHolder>;
    getContractAt(
      name: "ERC1410TokenHolderFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410TokenHolderFacet>;
    getContractAt(
      name: "ERC1594",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1594>;
    getContractAt(
      name: "ERC1643",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1643>;
    getContractAt(
      name: "ERC1644",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1644>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC20Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Votes>;
    getContractAt(
      name: "ERC3643Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643Management>;
    getContractAt(
      name: "ERC3643Batch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643Batch>;
    getContractAt(
      name: "ERC3643BatchFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643BatchFacet>;
    getContractAt(
      name: "ERC3643ManagementFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643ManagementFacet>;
    getContractAt(
      name: "ERC3643Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643Management>;
    getContractAt(
      name: "ERC3643ManagementFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643ManagementFacet>;
    getContractAt(
      name: "ERC3643Operations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643Operations>;
    getContractAt(
      name: "ERC3643OperationsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643OperationsFacet>;
    getContractAt(
      name: "ERC3643Read",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643Read>;
    getContractAt(
      name: "ERC3643ReadFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643ReadFacet>;
    getContractAt(
      name: "ExternalControlListManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalControlListManagement>;
    getContractAt(
      name: "ExternalKycListManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalKycListManagement>;
    getContractAt(
      name: "ExternalPauseManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalPauseManagement>;
    getContractAt(
      name: "Freeze",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Freeze>;
    getContractAt(
      name: "FreezeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FreezeFacet>;
    getContractAt(
      name: "HoldManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldManagement>;
    getContractAt(
      name: "HoldManagementFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldManagementFacet>;
    getContractAt(
      name: "HoldRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldRead>;
    getContractAt(
      name: "HoldReadFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldReadFacet>;
    getContractAt(
      name: "HoldTokenHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldTokenHolder>;
    getContractAt(
      name: "HoldTokenHolderFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldTokenHolderFacet>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlStorageWrapper>;
    getContractAt(
      name: "ICap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICap>;
    getContractAt(
      name: "ICapStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICapStorageWrapper>;
    getContractAt(
      name: "IClearing",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearing>;
    getContractAt(
      name: "IClearingActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingActions>;
    getContractAt(
      name: "IClearingHoldCreation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHoldCreation>;
    getContractAt(
      name: "IClearingRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingRead>;
    getContractAt(
      name: "IClearingRedeem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingRedeem>;
    getContractAt(
      name: "IClearingStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingStorageWrapper>;
    getContractAt(
      name: "IClearingTransfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingTransfer>;
    getContractAt(
      name: "IControlList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IControlList>;
    getContractAt(
      name: "IControlListStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IControlListStorageWrapper>;
    getContractAt(
      name: "ICorporateActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICorporateActions>;
    getContractAt(
      name: "ICorporateActionsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICorporateActionsStorageWrapper>;
    getContractAt(
      name: "IERC1410",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1410>;
    getContractAt(
      name: "IERC1410Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1410Management>;
    getContractAt(
      name: "IERC1410Read",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1410Read>;
    getContractAt(
      name: "IERC1410StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1410StorageWrapper>;
    getContractAt(
      name: "IERC1410TokenHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1410TokenHolder>;
    getContractAt(
      name: "IERC1594",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1594>;
    getContractAt(
      name: "IERC1594StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1594StorageWrapper>;
    getContractAt(
      name: "IERC1643",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1643>;
    getContractAt(
      name: "IERC1644",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1644>;
    getContractAt(
      name: "IERC1644StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1644StorageWrapper>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20StorageWrapper>;
    getContractAt(
      name: "IERC20Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Votes>;
    getContractAt(
      name: "IERC5805",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805>;
    getContractAt(
      name: "IVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "ICompliance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICompliance>;
    getContractAt(
      name: "IERC3643",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643>;
    getContractAt(
      name: "IERC3643Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643Management>;
    getContractAt(
      name: "IERC3643Batch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643Batch>;
    getContractAt(
      name: "IERC3643Management",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643Management>;
    getContractAt(
      name: "IERC3643Operations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643Operations>;
    getContractAt(
      name: "IERC3643Read",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643Read>;
    getContractAt(
      name: "IERC3643StorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3643StorageWrapper>;
    getContractAt(
      name: "IFreeze",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFreeze>;
    getContractAt(
      name: "IIdentityRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentityRegistry>;
    getContractAt(
      name: "IExternalControlList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalControlList>;
    getContractAt(
      name: "IExternalControlListManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalControlListManagement>;
    getContractAt(
      name: "IExternalKycList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalKycList>;
    getContractAt(
      name: "IExternalKycListManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalKycListManagement>;
    getContractAt(
      name: "IExternalPause",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalPause>;
    getContractAt(
      name: "IExternalPauseManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalPauseManagement>;
    getContractAt(
      name: "IFreeze",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFreeze>;
    getContractAt(
      name: "IHold",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHold>;
    getContractAt(
      name: "IHoldManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHoldManagement>;
    getContractAt(
      name: "IHoldRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHoldRead>;
    getContractAt(
      name: "IHoldTokenHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHoldTokenHolder>;
    getContractAt(
      name: "IKyc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKyc>;
    getContractAt(
      name: "IRevocationList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRevocationList>;
    getContractAt(
      name: "ILock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILock>;
    getContractAt(
      name: "IPause",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPause>;
    getContractAt(
      name: "IPauseStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPauseStorageWrapper>;
    getContractAt(
      name: "IProtectedPartitions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtectedPartitions>;
    getContractAt(
      name: "IProtectedPartitionsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtectedPartitionsStorageWrapper>;
    getContractAt(
      name: "ISnapshots",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISnapshots>;
    getContractAt(
      name: "ISnapshotsStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISnapshotsStorageWrapper>;
    getContractAt(
      name: "ISsiManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISsiManagement>;
    getContractAt(
      name: "Kyc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Kyc>;
    getContractAt(
      name: "Lock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lock>;
    getContractAt(
      name: "Pause",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pause>;
    getContractAt(
      name: "PauseFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseFacet>;
    getContractAt(
      name: "ProtectedPartitions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtectedPartitions>;
    getContractAt(
      name: "Snapshots",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Snapshots>;
    getContractAt(
      name: "SsiManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SsiManagement>;
    getContractAt(
      name: "AdjustBalances",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdjustBalances>;
    getContractAt(
      name: "Bond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bond>;
    getContractAt(
      name: "BondRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondRead>;
    getContractAt(
      name: "Equity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Equity>;
    getContractAt(
      name: "IAdjustBalances",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAdjustBalances>;
    getContractAt(
      name: "IAdjustBalancesStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAdjustBalancesStorageWrapper>;
    getContractAt(
      name: "IBond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBond>;
    getContractAt(
      name: "IBondRead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondRead>;
    getContractAt(
      name: "IBondStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondStorageWrapper>;
    getContractAt(
      name: "IEquity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEquity>;
    getContractAt(
      name: "IEquityStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEquityStorageWrapper>;
    getContractAt(
      name: "IScheduledBalanceAdjustments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScheduledBalanceAdjustments>;
    getContractAt(
      name: "IScheduledSnapshots",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScheduledSnapshots>;
    getContractAt(
      name: "IScheduledTasks",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScheduledTasks>;
    getContractAt(
      name: "ScheduledBalanceAdjustments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledBalanceAdjustments>;
    getContractAt(
      name: "ScheduledSnapshots",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledSnapshots>;
    getContractAt(
      name: "ScheduledTasks",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledTasks>;
    getContractAt(
      name: "BondUSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondUSA>;
    getContractAt(
      name: "BondUSARead",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondUSARead>;
    getContractAt(
      name: "EquityUSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EquityUSA>;
    getContractAt(
      name: "IBondUSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondUSA>;
    getContractAt(
      name: "IEquityUSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEquityUSA>;
    getContractAt(
      name: "ISecurity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISecurity>;
    getContractAt(
      name: "ITransferAndLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransferAndLock>;
    getContractAt(
      name: "ITransferAndLockStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransferAndLockStorageWrapper>;
    getContractAt(
      name: "Security",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Security>;
    getContractAt(
      name: "TransferAndLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferAndLock>;
    getContractAt(
      name: "MockedBlacklist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockedBlacklist>;
    getContractAt(
      name: "MockedExternalKycList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockedExternalKycList>;
    getContractAt(
      name: "MockedExternalPause",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockedExternalPause>;
    getContractAt(
      name: "MockedWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockedWhitelist>;
    getContractAt(
      name: "MockedT3RevocationRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockedT3RevocationRegistry>;
    getContractAt(
      name: "BusinessLogicResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BusinessLogicResolver>;
    getContractAt(
      name: "BusinessLogicResolverWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BusinessLogicResolverWrapper>;
    getContractAt(
      name: "DiamondCutManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutManager>;
    getContractAt(
      name: "DiamondCutManagerWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutManagerWrapper>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "ResolverProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ResolverProxy>;
    getContractAt(
      name: "ResolverProxyUnstructured",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ResolverProxyUnstructured>;
    getContractAt(
      name: "ComplianceMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComplianceMock>;
    getContractAt(
      name: "IdentityRegistryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityRegistryMock>;
    getContractAt(
      name: "AccessControlFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlFacetTimeTravel>;
    getContractAt(
      name: "AdjustBalancesTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdjustBalancesTimeTravel>;
    getContractAt(
      name: "BondUSAReadTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondUSAReadTimeTravel>;
    getContractAt(
      name: "BondUSATimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondUSATimeTravel>;
    getContractAt(
      name: "CapTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CapTimeTravel>;
    getContractAt(
      name: "ClearingActionsFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingActionsFacetTimeTravel>;
    getContractAt(
      name: "ClearingHoldCreationFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHoldCreationFacetTimeTravel>;
    getContractAt(
      name: "ClearingReadFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingReadFacetTimeTravel>;
    getContractAt(
      name: "ClearingRedeemFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingRedeemFacetTimeTravel>;
    getContractAt(
      name: "ClearingTransferFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingTransferFacetTimeTravel>;
    getContractAt(
      name: "ControlListTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ControlListTimeTravel>;
    getContractAt(
      name: "CorporateActionsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CorporateActionsTimeTravel>;
    getContractAt(
      name: "EquityUSATimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EquityUSATimeTravel>;
    getContractAt(
      name: "ERC1410ManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410ManagementTimeTravel>;
    getContractAt(
      name: "ERC1410ReadTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410ReadTimeTravel>;
    getContractAt(
      name: "ERC1410TokenHolderTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1410TokenHolderTimeTravel>;
    getContractAt(
      name: "ERC1594TimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1594TimeTravel>;
    getContractAt(
      name: "ERC1643TimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1643TimeTravel>;
    getContractAt(
      name: "ERC1644TimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1644TimeTravel>;
    getContractAt(
      name: "ERC20PermitTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitTimeTravel>;
    getContractAt(
      name: "ERC20TimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20TimeTravel>;
    getContractAt(
      name: "ERC20VotesTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20VotesTimeTravel>;
    getContractAt(
      name: "ERC3643BatchTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643BatchTimeTravel>;
    getContractAt(
      name: "ERC3643ManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643ManagementTimeTravel>;
    getContractAt(
      name: "ERC3643OperationsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643OperationsTimeTravel>;
    getContractAt(
      name: "ERC3643ReadTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3643ReadTimeTravel>;
    getContractAt(
      name: "BondUSAReadTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondUSAReadTimeTravel>;
    getContractAt(
      name: "ExternalControlListManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalControlListManagementTimeTravel>;
    getContractAt(
      name: "ExternalKycListManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalKycListManagementTimeTravel>;
    getContractAt(
      name: "ExternalPauseManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalPauseManagementTimeTravel>;
    getContractAt(
      name: "FreezeFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FreezeFacetTimeTravel>;
    getContractAt(
      name: "HoldManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldManagementTimeTravel>;
    getContractAt(
      name: "HoldReadTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldReadTimeTravel>;
    getContractAt(
      name: "HoldTokenHolderTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HoldTokenHolderTimeTravel>;
    getContractAt(
      name: "KycTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KycTimeTravel>;
    getContractAt(
      name: "LockTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LockTimeTravel>;
    getContractAt(
      name: "PauseFacetTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseFacetTimeTravel>;
    getContractAt(
      name: "ProtectedPartitionsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtectedPartitionsTimeTravel>;
    getContractAt(
      name: "ScheduledBalanceAdjustmentsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledBalanceAdjustmentsTimeTravel>;
    getContractAt(
      name: "ScheduledSnapshotsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledSnapshotsTimeTravel>;
    getContractAt(
      name: "ScheduledTasksTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScheduledTasksTimeTravel>;
    getContractAt(
      name: "SnapshotsTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SnapshotsTimeTravel>;
    getContractAt(
      name: "SsiManagementTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SsiManagementTimeTravel>;
    getContractAt(
      name: "TransferAndLockTimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferAndLockTimeTravel>;
    getContractAt(
      name: "ITimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITimeTravel>;
    getContractAt(
      name: "ITimeTravelStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITimeTravelStorageWrapper>;
    getContractAt(
      name: "TimeTravel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimeTravel>;
    getContractAt(
      name: "TimeTravelStorageWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimeTravelStorageWrapper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
