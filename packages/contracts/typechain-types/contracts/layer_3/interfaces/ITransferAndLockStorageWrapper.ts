/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, BytesLike, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface ITransferAndLockStorageWrapperInterface
  extends utils.Interface {
  functions: {};

  events: {
    "PartitionTransferredAndLocked(bytes32,address,address,uint256,bytes,uint256,uint256)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "PartitionTransferredAndLocked"
  ): EventFragment;
}

export interface PartitionTransferredAndLockedEventObject {
  partition: string;
  from: string;
  to: string;
  value: BigNumber;
  data: string;
  expirationTimestamp: BigNumber;
  lockId: BigNumber;
}
export type PartitionTransferredAndLockedEvent = TypedEvent<
  [string, string, string, BigNumber, string, BigNumber, BigNumber],
  PartitionTransferredAndLockedEventObject
>;

export type PartitionTransferredAndLockedEventFilter =
  TypedEventFilter<PartitionTransferredAndLockedEvent>;

export interface ITransferAndLockStorageWrapper extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ITransferAndLockStorageWrapperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "PartitionTransferredAndLocked(bytes32,address,address,uint256,bytes,uint256,uint256)"(
      partition?: PromiseOrValue<BytesLike> | null,
      from?: PromiseOrValue<string> | null,
      to?: null,
      value?: null,
      data?: null,
      expirationTimestamp?: null,
      lockId?: null
    ): PartitionTransferredAndLockedEventFilter;
    PartitionTransferredAndLocked(
      partition?: PromiseOrValue<BytesLike> | null,
      from?: PromiseOrValue<string> | null,
      to?: null,
      value?: null,
      data?: null,
      expirationTimestamp?: null,
      lockId?: null
    ): PartitionTransferredAndLockedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
