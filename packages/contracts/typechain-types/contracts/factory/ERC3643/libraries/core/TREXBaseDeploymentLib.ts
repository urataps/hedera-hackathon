/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export interface TREXBaseDeploymentLibInterface extends utils.Interface {
  functions: {};

  events: {
    "Deployed(address)": EventFragment;
    "TREXSuiteDeployed(address,address,address,address,address,address,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Deployed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TREXSuiteDeployed"): EventFragment;
}

export interface DeployedEventObject {
  _addr: string;
}
export type DeployedEvent = TypedEvent<[string], DeployedEventObject>;

export type DeployedEventFilter = TypedEventFilter<DeployedEvent>;

export interface TREXSuiteDeployedEventObject {
  _token: string;
  _ir: string;
  _irs: string;
  _tir: string;
  _ctr: string;
  _mc: string;
  _salt: string;
}
export type TREXSuiteDeployedEvent = TypedEvent<
  [string, string, string, string, string, string, string],
  TREXSuiteDeployedEventObject
>;

export type TREXSuiteDeployedEventFilter =
  TypedEventFilter<TREXSuiteDeployedEvent>;

export interface TREXBaseDeploymentLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TREXBaseDeploymentLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "Deployed(address)"(
      _addr?: PromiseOrValue<string> | null
    ): DeployedEventFilter;
    Deployed(_addr?: PromiseOrValue<string> | null): DeployedEventFilter;

    "TREXSuiteDeployed(address,address,address,address,address,address,string)"(
      _token?: PromiseOrValue<string> | null,
      _ir?: null,
      _irs?: null,
      _tir?: null,
      _ctr?: null,
      _mc?: null,
      _salt?: PromiseOrValue<string> | null
    ): TREXSuiteDeployedEventFilter;
    TREXSuiteDeployed(
      _token?: PromiseOrValue<string> | null,
      _ir?: null,
      _irs?: null,
      _tir?: null,
      _ctr?: null,
      _mc?: null,
      _salt?: PromiseOrValue<string> | null
    ): TREXSuiteDeployedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
