/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export type IssueDataStruct = {
  partition: PromiseOrValue<BytesLike>;
  tokenHolder: PromiseOrValue<string>;
  value: PromiseOrValue<BigNumberish>;
  data: PromiseOrValue<BytesLike>;
};

export type IssueDataStructOutput = [string, string, BigNumber, string] & {
  partition: string;
  tokenHolder: string;
  value: BigNumber;
  data: string;
};

export type OperatorTransferDataStruct = {
  partition: PromiseOrValue<BytesLike>;
  from: PromiseOrValue<string>;
  to: PromiseOrValue<string>;
  value: PromiseOrValue<BigNumberish>;
  data: PromiseOrValue<BytesLike>;
  operatorData: PromiseOrValue<BytesLike>;
};

export type OperatorTransferDataStructOutput = [
  string,
  string,
  string,
  BigNumber,
  string,
  string
] & {
  partition: string;
  from: string;
  to: string;
  value: BigNumber;
  data: string;
  operatorData: string;
};

export interface IERC1410ManagementInterface extends utils.Interface {
  functions: {
    "controllerRedeemByPartition(bytes32,address,uint256,bytes,bytes)": FunctionFragment;
    "controllerTransferByPartition(bytes32,address,address,uint256,bytes,bytes)": FunctionFragment;
    "initialize_ERC1410(bool)": FunctionFragment;
    "issueByPartition((bytes32,address,uint256,bytes))": FunctionFragment;
    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)": FunctionFragment;
    "operatorTransferByPartition((bytes32,address,address,uint256,bytes,bytes))": FunctionFragment;
    "protectedRedeemFromByPartition(bytes32,address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "protectedTransferFromByPartition(bytes32,address,address,uint256,uint256,uint256,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "controllerRedeemByPartition"
      | "controllerTransferByPartition"
      | "initialize_ERC1410"
      | "issueByPartition"
      | "operatorRedeemByPartition"
      | "operatorTransferByPartition"
      | "protectedRedeemFromByPartition"
      | "protectedTransferFromByPartition"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "controllerRedeemByPartition",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "controllerTransferByPartition",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize_ERC1410",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "issueByPartition",
    values: [IssueDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorRedeemByPartition",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorTransferByPartition",
    values: [OperatorTransferDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "protectedRedeemFromByPartition",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "protectedTransferFromByPartition",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "controllerRedeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "controllerTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialize_ERC1410",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "issueByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorRedeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protectedRedeemFromByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protectedTransferFromByPartition",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IERC1410Management extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IERC1410ManagementInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    controllerRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    controllerTransferByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    initialize_ERC1410(
      _multiPartition: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    issueByPartition(
      _issueData: IssueDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    operatorRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    operatorTransferByPartition(
      _operatorTransferData: OperatorTransferDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    protectedRedeemFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    protectedTransferFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  controllerRedeemByPartition(
    _partition: PromiseOrValue<BytesLike>,
    _tokenHolder: PromiseOrValue<string>,
    _value: PromiseOrValue<BigNumberish>,
    _data: PromiseOrValue<BytesLike>,
    _operatorData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  controllerTransferByPartition(
    _partition: PromiseOrValue<BytesLike>,
    _from: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _value: PromiseOrValue<BigNumberish>,
    _data: PromiseOrValue<BytesLike>,
    _operatorData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  initialize_ERC1410(
    _multiPartition: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  issueByPartition(
    _issueData: IssueDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  operatorRedeemByPartition(
    _partition: PromiseOrValue<BytesLike>,
    _tokenHolder: PromiseOrValue<string>,
    _value: PromiseOrValue<BigNumberish>,
    _data: PromiseOrValue<BytesLike>,
    _operatorData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  operatorTransferByPartition(
    _operatorTransferData: OperatorTransferDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  protectedRedeemFromByPartition(
    _partition: PromiseOrValue<BytesLike>,
    _from: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _deadline: PromiseOrValue<BigNumberish>,
    _nounce: PromiseOrValue<BigNumberish>,
    _signature: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  protectedTransferFromByPartition(
    _partition: PromiseOrValue<BytesLike>,
    _from: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _deadline: PromiseOrValue<BigNumberish>,
    _nounce: PromiseOrValue<BigNumberish>,
    _signature: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    controllerRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    controllerTransferByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize_ERC1410(
      _multiPartition: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    issueByPartition(
      _issueData: IssueDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorTransferByPartition(
      _operatorTransferData: OperatorTransferDataStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    protectedRedeemFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    protectedTransferFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    controllerRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    controllerTransferByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    initialize_ERC1410(
      _multiPartition: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    issueByPartition(
      _issueData: IssueDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    operatorRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    operatorTransferByPartition(
      _operatorTransferData: OperatorTransferDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    protectedRedeemFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    protectedTransferFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    controllerRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    controllerTransferByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    initialize_ERC1410(
      _multiPartition: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    issueByPartition(
      _issueData: IssueDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    operatorRedeemByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _tokenHolder: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _operatorData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    operatorTransferByPartition(
      _operatorTransferData: OperatorTransferDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    protectedRedeemFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    protectedTransferFromByPartition(
      _partition: PromiseOrValue<BytesLike>,
      _from: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _deadline: PromiseOrValue<BigNumberish>,
      _nounce: PromiseOrValue<BigNumberish>,
      _signature: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
