"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ITREXFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_addr",
                type: "address",
            },
        ],
        name: "Deployed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_idFactory",
                type: "address",
            },
        ],
        name: "IdFactorySet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_implementationAuthority",
                type: "address",
            },
        ],
        name: "ImplementationAuthoritySet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_ir",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_irs",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_tir",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_ctr",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_mc",
                type: "address",
            },
            {
                indexed: true,
                internalType: "string",
                name: "_salt",
                type: "string",
            },
        ],
        name: "TREXSuiteDeployed",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_salt",
                type: "string",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "irs",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "ONCHAINID",
                        type: "address",
                    },
                    {
                        internalType: "address[]",
                        name: "irAgents",
                        type: "address[]",
                    },
                    {
                        internalType: "address[]",
                        name: "tokenAgents",
                        type: "address[]",
                    },
                    {
                        internalType: "address[]",
                        name: "complianceModules",
                        type: "address[]",
                    },
                    {
                        internalType: "bytes[]",
                        name: "complianceSettings",
                        type: "bytes[]",
                    },
                ],
                internalType: "struct ITREXFactory.TokenDetails",
                name: "_tokenDetails",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256[]",
                        name: "claimTopics",
                        type: "uint256[]",
                    },
                    {
                        internalType: "address[]",
                        name: "issuers",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[][]",
                        name: "issuerClaims",
                        type: "uint256[][]",
                    },
                ],
                internalType: "struct ITREXFactory.ClaimDetails",
                name: "_claimDetails",
                type: "tuple",
            },
        ],
        name: "deployTREXSuite",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getIdFactory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getImplementationAuthority",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_salt",
                type: "string",
            },
        ],
        name: "getToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_contract",
                type: "address",
            },
            {
                internalType: "address",
                name: "_newOwner",
                type: "address",
            },
        ],
        name: "recoverContractOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_idFactory",
                type: "address",
            },
        ],
        name: "setIdFactory",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_implementationAuthority",
                type: "address",
            },
        ],
        name: "setImplementationAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class ITREXFactory__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ITREXFactory__factory = ITREXFactory__factory;
