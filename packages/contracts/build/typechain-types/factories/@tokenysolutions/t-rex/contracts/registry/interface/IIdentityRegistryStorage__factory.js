"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IIdentityRegistryStorage__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "investorAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint16",
                name: "country",
                type: "uint16",
            },
        ],
        name: "CountryModified",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract IIdentity",
                name: "oldIdentity",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IIdentity",
                name: "newIdentity",
                type: "address",
            },
        ],
        name: "IdentityModified",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "identityRegistry",
                type: "address",
            },
        ],
        name: "IdentityRegistryBound",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "identityRegistry",
                type: "address",
            },
        ],
        name: "IdentityRegistryUnbound",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "investorAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IIdentity",
                name: "identity",
                type: "address",
            },
        ],
        name: "IdentityStored",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "investorAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IIdentity",
                name: "identity",
                type: "address",
            },
        ],
        name: "IdentityUnstored",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
            {
                internalType: "contract IIdentity",
                name: "_identity",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "_country",
                type: "uint16",
            },
        ],
        name: "addIdentityToStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_identityRegistry",
                type: "address",
            },
        ],
        name: "bindIdentityRegistry",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "linkedIdentityRegistries",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
            {
                internalType: "contract IIdentity",
                name: "_identity",
                type: "address",
            },
        ],
        name: "modifyStoredIdentity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "_country",
                type: "uint16",
            },
        ],
        name: "modifyStoredInvestorCountry",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
        ],
        name: "removeIdentityFromStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
        ],
        name: "storedIdentity",
        outputs: [
            {
                internalType: "contract IIdentity",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userAddress",
                type: "address",
            },
        ],
        name: "storedInvestorCountry",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_identityRegistry",
                type: "address",
            },
        ],
        name: "unbindIdentityRegistry",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IIdentityRegistryStorage__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IIdentityRegistryStorage__factory = IIdentityRegistryStorage__factory;
