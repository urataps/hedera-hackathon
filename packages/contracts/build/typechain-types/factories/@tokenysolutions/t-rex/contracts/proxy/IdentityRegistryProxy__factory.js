"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityRegistryProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "implementationAuthority",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trustedIssuersRegistry",
                type: "address",
            },
            {
                internalType: "address",
                name: "_claimTopicsRegistry",
                type: "address",
            },
            {
                internalType: "address",
                name: "_identityStorage",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_implementationAuthority",
                type: "address",
            },
        ],
        name: "ImplementationAuthoritySet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "getImplementationAuthority",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_newImplementationAuthority",
                type: "address",
            },
        ],
        name: "setImplementationAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516109bd3803806109bd83398101604081905261002f916102a7565b6001600160a01b0384161580159061004f57506001600160a01b03831615155b801561006357506001600160a01b03821615155b801561007757506001600160a01b03811615155b6100c85760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6100de8460008051602061099d83398151915255565b6040516001600160a01b038516907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a2600061012a60008051602061099d8339815191525490565b6001600160a01b0316631ee9ce8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018b91906102fb565b6040516001600160a01b0386811660248301528581166044830152848116606483015291925060009183169060840160408051601f198184030181529181526020820180516001600160e01b031663184b955960e01b179052516101ef919061031d565b600060405180830381855af49150503d806000811461022a576040519150601f19603f3d011682016040523d82523d6000602084013e61022f565b606091505b50509050806102805760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e0000000000000000000060448201526064016100bf565b50505050505061034c565b80516001600160a01b03811681146102a257600080fd5b919050565b600080600080608085870312156102bd57600080fd5b6102c68561028b565b93506102d46020860161028b565b92506102e26040860161028b565b91506102f06060860161028b565b905092959194509250565b60006020828403121561030d57600080fd5b6103168261028b565b9392505050565b6000825160005b8181101561033e5760208186018101518583015201610324565b506000920191825250919050565b6106428061035b6000396000f3fe6080604052600436106100295760003560e01c80632d5f1187146100c157806392dd9d65146100f2575b6000610033610112565b6001600160a01b0316631ee9ce8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610070573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009491906105cb565b90503660008037600080366000846127105a03f43d806000803e8180156100ba57816000f35b816000fd5b005b3480156100cd57600080fd5b506100d6610112565b6040516001600160a01b03909116815260200160405180910390f35b3480156100fe57600080fd5b506100bf61010d3660046105ef565b610137565b7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc5490565b61013f610112565b6001600160a01b0316336001600160a01b0316146101ba5760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60448201526c1c9a5d1e4818d85b8818d85b1b609a1b60648201526084015b60405180910390fd5b6001600160a01b0381166102105760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064016101b1565b60006001600160a01b0316816001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d91906105cb565b6001600160a01b031614158015610308575060006001600160a01b0316816001600160a01b0316636ff6e83f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc91906105cb565b6001600160a01b031614155b8015610388575060006001600160a01b0316816001600160a01b0316631ee9ce8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c91906105cb565b6001600160a01b031614155b8015610408575060006001600160a01b0316816001600160a01b0316639e3e7bb96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc91906105cb565b6001600160a01b031614155b8015610488575060006001600160a01b0316816001600160a01b03166361f898256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c91906105cb565b6001600160a01b031614155b8015610508575060006001600160a01b0316816001600160a01b031663fedcc0526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906105cb565b6001600160a01b031614155b6105545760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420496d706c656d656e746174696f6e20417574686f7269747960448201526064016101b1565b61057c817f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc55565b6040516001600160a01b038216907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a250565b6001600160a01b03811681146105c857600080fd5b50565b6000602082840312156105dd57600080fd5b81516105e8816105b3565b9392505050565b60006020828403121561060157600080fd5b81356105e8816105b356fea26469706673582212204d5edaa156726dfc8cdf5c73787f8193e9eba853d09ce83da4c13656d9e3dd2b64736f6c63430008110033821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc";
const isSuperArgs = (xs) => xs.length > 1;
class IdentityRegistryProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(implementationAuthority, _trustedIssuersRegistry, _claimTopicsRegistry, _identityStorage, overrides) {
        return super.deploy(implementationAuthority, _trustedIssuersRegistry, _claimTopicsRegistry, _identityStorage, overrides || {});
    }
    getDeployTransaction(implementationAuthority, _trustedIssuersRegistry, _claimTopicsRegistry, _identityStorage, overrides) {
        return super.getDeployTransaction(implementationAuthority, _trustedIssuersRegistry, _claimTopicsRegistry, _identityStorage, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IdentityRegistryProxy__factory = IdentityRegistryProxy__factory;
