"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TRexIBusinessLogicResolver__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "businessLogicKey",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "businessLogicAddress",
                        type: "address",
                    },
                ],
                indexed: false,
                internalType: "struct TRexIBusinessLogicResolver.BusinessLogicRegistryData[]",
                name: "businessLogics",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newLatestVersion",
                type: "uint256",
            },
        ],
        name: "BusinessLogicsRegistered",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "bytes4[]",
                name: "_selectors",
                type: "bytes4[]",
            },
        ],
        name: "addSelectorsToBlacklist",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getBusinessLogicCount",
        outputs: [
            {
                internalType: "uint256",
                name: "businessLogicCount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getBusinessLogicKeys",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "businessLogicKeys_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLatestVersion",
        outputs: [
            {
                internalType: "uint256",
                name: "latestVersion_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getSelectorsBlacklist",
        outputs: [
            {
                internalType: "bytes4[]",
                name: "selectors_",
                type: "bytes4[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
        ],
        name: "getVersionStatus",
        outputs: [
            {
                internalType: "enum TRexIBusinessLogicResolver.VersionStatus",
                name: "status_",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "initialize_BusinessLogicResolver",
        outputs: [
            {
                internalType: "bool",
                name: "success_",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "businessLogicKey",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "businessLogicAddress",
                        type: "address",
                    },
                ],
                internalType: "struct TRexIBusinessLogicResolver.BusinessLogicRegistryData[]",
                name: "_businessLogics",
                type: "tuple[]",
            },
        ],
        name: "registerBusinessLogics",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "bytes4[]",
                name: "_selectors",
                type: "bytes4[]",
            },
        ],
        name: "removeSelectorsFromBlacklist",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_businessLogicKey",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
        ],
        name: "resolveBusinessLogicByVersion",
        outputs: [
            {
                internalType: "address",
                name: "businessLogicAddress_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_businessLogicKey",
                type: "bytes32",
            },
        ],
        name: "resolveLatestBusinessLogic",
        outputs: [
            {
                internalType: "address",
                name: "businessLogicAddress_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class TRexIBusinessLogicResolver__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TRexIBusinessLogicResolver__factory = TRexIBusinessLogicResolver__factory;
