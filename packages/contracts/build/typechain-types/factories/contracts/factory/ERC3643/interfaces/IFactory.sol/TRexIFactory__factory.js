"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TRexIFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract TRexIBusinessLogicResolver",
                name: "resolver",
                type: "address",
            },
        ],
        name: "EmptyResolver",
        type: "error",
    },
    {
        inputs: [],
        name: "NoInitialAdmins",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "deployer",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "bondAddress",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "arePartitionsProtected",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isMultiPartition",
                                type: "bool",
                            },
                            {
                                internalType: "contract TRexIBusinessLogicResolver",
                                name: "resolver",
                                type: "address",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "key",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct TRexIFactory.ResolverProxyConfiguration",
                                name: "resolverProxyConfiguration",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "role",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "members",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct TRexIResolverProxy.Rbac[]",
                                name: "rbacs",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bool",
                                name: "isControllable",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isWhiteList",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "maxSupply",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "symbol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "isin",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "decimals",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct TRexIERC20.ERC20MetadataInfo",
                                name: "erc20MetadataInfo",
                                type: "tuple",
                            },
                            {
                                internalType: "bool",
                                name: "clearingActive",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "internalKycActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address[]",
                                name: "externalPauses",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalControlLists",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalKycLists",
                                type: "address[]",
                            },
                            {
                                internalType: "bool",
                                name: "erc20VotesActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address",
                                name: "compliance",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "identityRegistry",
                                type: "address",
                            },
                        ],
                        internalType: "struct TRexIFactory.SecurityData",
                        name: "security",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes3",
                                name: "currency",
                                type: "bytes3",
                            },
                            {
                                internalType: "uint256",
                                name: "nominalValue",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "startingDate",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maturityDate",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIBondRead.BondDetailsData",
                        name: "bondDetails",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "couponFrequency",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "couponRate",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "firstCouponDate",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIBondRead.CouponDetailsData",
                        name: "couponDetails",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct TRexIFactory.BondData",
                name: "bondData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum RegulationType",
                        name: "regulationType",
                        type: "uint8",
                    },
                    {
                        internalType: "enum RegulationSubType",
                        name: "regulationSubType",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "countriesControlListType",
                                type: "bool",
                            },
                            {
                                internalType: "string",
                                name: "listOfCountries",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "info",
                                type: "string",
                            },
                        ],
                        internalType: "struct AdditionalSecurityData",
                        name: "additionalSecurityData",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct FactoryRegulationData",
                name: "regulationData",
                type: "tuple",
            },
        ],
        name: "BondDeployed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "deployer",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "equityAddress",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "arePartitionsProtected",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isMultiPartition",
                                type: "bool",
                            },
                            {
                                internalType: "contract TRexIBusinessLogicResolver",
                                name: "resolver",
                                type: "address",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "key",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct TRexIFactory.ResolverProxyConfiguration",
                                name: "resolverProxyConfiguration",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "role",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "members",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct TRexIResolverProxy.Rbac[]",
                                name: "rbacs",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bool",
                                name: "isControllable",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isWhiteList",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "maxSupply",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "symbol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "isin",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "decimals",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct TRexIERC20.ERC20MetadataInfo",
                                name: "erc20MetadataInfo",
                                type: "tuple",
                            },
                            {
                                internalType: "bool",
                                name: "clearingActive",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "internalKycActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address[]",
                                name: "externalPauses",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalControlLists",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalKycLists",
                                type: "address[]",
                            },
                            {
                                internalType: "bool",
                                name: "erc20VotesActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address",
                                name: "compliance",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "identityRegistry",
                                type: "address",
                            },
                        ],
                        internalType: "struct TRexIFactory.SecurityData",
                        name: "security",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "votingRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "informationRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "liquidationRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "subscriptionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "conversionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "redemptionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "putRight",
                                type: "bool",
                            },
                            {
                                internalType: "enum TRexIEquity.DividendType",
                                name: "dividendRight",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes3",
                                name: "currency",
                                type: "bytes3",
                            },
                            {
                                internalType: "uint256",
                                name: "nominalValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIEquity.EquityDetailsData",
                        name: "equityDetails",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct TRexIFactory.EquityData",
                name: "equityData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum RegulationType",
                        name: "regulationType",
                        type: "uint8",
                    },
                    {
                        internalType: "enum RegulationSubType",
                        name: "regulationSubType",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "countriesControlListType",
                                type: "bool",
                            },
                            {
                                internalType: "string",
                                name: "listOfCountries",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "info",
                                type: "string",
                            },
                        ],
                        internalType: "struct AdditionalSecurityData",
                        name: "additionalSecurityData",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct FactoryRegulationData",
                name: "regulationData",
                type: "tuple",
            },
        ],
        name: "EquityDeployed",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "arePartitionsProtected",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isMultiPartition",
                                type: "bool",
                            },
                            {
                                internalType: "contract TRexIBusinessLogicResolver",
                                name: "resolver",
                                type: "address",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "key",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct TRexIFactory.ResolverProxyConfiguration",
                                name: "resolverProxyConfiguration",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "role",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "members",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct TRexIResolverProxy.Rbac[]",
                                name: "rbacs",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bool",
                                name: "isControllable",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isWhiteList",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "maxSupply",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "symbol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "isin",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "decimals",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct TRexIERC20.ERC20MetadataInfo",
                                name: "erc20MetadataInfo",
                                type: "tuple",
                            },
                            {
                                internalType: "bool",
                                name: "clearingActive",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "internalKycActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address[]",
                                name: "externalPauses",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalControlLists",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalKycLists",
                                type: "address[]",
                            },
                            {
                                internalType: "bool",
                                name: "erc20VotesActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address",
                                name: "compliance",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "identityRegistry",
                                type: "address",
                            },
                        ],
                        internalType: "struct TRexIFactory.SecurityData",
                        name: "security",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes3",
                                name: "currency",
                                type: "bytes3",
                            },
                            {
                                internalType: "uint256",
                                name: "nominalValue",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "startingDate",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maturityDate",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIBondRead.BondDetailsData",
                        name: "bondDetails",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "couponFrequency",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "couponRate",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "firstCouponDate",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIBondRead.CouponDetailsData",
                        name: "couponDetails",
                        type: "tuple",
                    },
                ],
                internalType: "struct TRexIFactory.BondData",
                name: "_bondData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum RegulationType",
                        name: "regulationType",
                        type: "uint8",
                    },
                    {
                        internalType: "enum RegulationSubType",
                        name: "regulationSubType",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "countriesControlListType",
                                type: "bool",
                            },
                            {
                                internalType: "string",
                                name: "listOfCountries",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "info",
                                type: "string",
                            },
                        ],
                        internalType: "struct AdditionalSecurityData",
                        name: "additionalSecurityData",
                        type: "tuple",
                    },
                ],
                internalType: "struct FactoryRegulationData",
                name: "_factoryRegulationData",
                type: "tuple",
            },
        ],
        name: "deployBond",
        outputs: [
            {
                internalType: "address",
                name: "bondAddress_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "arePartitionsProtected",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isMultiPartition",
                                type: "bool",
                            },
                            {
                                internalType: "contract TRexIBusinessLogicResolver",
                                name: "resolver",
                                type: "address",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "key",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct TRexIFactory.ResolverProxyConfiguration",
                                name: "resolverProxyConfiguration",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "role",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "members",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct TRexIResolverProxy.Rbac[]",
                                name: "rbacs",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bool",
                                name: "isControllable",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isWhiteList",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "maxSupply",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "symbol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "isin",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "decimals",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct TRexIERC20.ERC20MetadataInfo",
                                name: "erc20MetadataInfo",
                                type: "tuple",
                            },
                            {
                                internalType: "bool",
                                name: "clearingActive",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "internalKycActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address[]",
                                name: "externalPauses",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalControlLists",
                                type: "address[]",
                            },
                            {
                                internalType: "address[]",
                                name: "externalKycLists",
                                type: "address[]",
                            },
                            {
                                internalType: "bool",
                                name: "erc20VotesActivated",
                                type: "bool",
                            },
                            {
                                internalType: "address",
                                name: "compliance",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "identityRegistry",
                                type: "address",
                            },
                        ],
                        internalType: "struct TRexIFactory.SecurityData",
                        name: "security",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "votingRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "informationRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "liquidationRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "subscriptionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "conversionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "redemptionRight",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "putRight",
                                type: "bool",
                            },
                            {
                                internalType: "enum TRexIEquity.DividendType",
                                name: "dividendRight",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes3",
                                name: "currency",
                                type: "bytes3",
                            },
                            {
                                internalType: "uint256",
                                name: "nominalValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TRexIEquity.EquityDetailsData",
                        name: "equityDetails",
                        type: "tuple",
                    },
                ],
                internalType: "struct TRexIFactory.EquityData",
                name: "_equityData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum RegulationType",
                        name: "regulationType",
                        type: "uint8",
                    },
                    {
                        internalType: "enum RegulationSubType",
                        name: "regulationSubType",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "countriesControlListType",
                                type: "bool",
                            },
                            {
                                internalType: "string",
                                name: "listOfCountries",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "info",
                                type: "string",
                            },
                        ],
                        internalType: "struct AdditionalSecurityData",
                        name: "additionalSecurityData",
                        type: "tuple",
                    },
                ],
                internalType: "struct FactoryRegulationData",
                name: "_factoryRegulationData",
                type: "tuple",
            },
        ],
        name: "deployEquity",
        outputs: [
            {
                internalType: "address",
                name: "equityAddress_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum RegulationType",
                name: "_regulationType",
                type: "uint8",
            },
            {
                internalType: "enum RegulationSubType",
                name: "_regulationSubType",
                type: "uint8",
            },
        ],
        name: "getAppliedRegulationData",
        outputs: [
            {
                components: [
                    {
                        internalType: "enum RegulationType",
                        name: "regulationType",
                        type: "uint8",
                    },
                    {
                        internalType: "enum RegulationSubType",
                        name: "regulationSubType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "dealSize",
                        type: "uint256",
                    },
                    {
                        internalType: "enum AccreditedInvestors",
                        name: "accreditedInvestors",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "maxNonAccreditedInvestors",
                        type: "uint256",
                    },
                    {
                        internalType: "enum ManualInvestorVerification",
                        name: "manualInvestorVerification",
                        type: "uint8",
                    },
                    {
                        internalType: "enum InternationalInvestors",
                        name: "internationalInvestors",
                        type: "uint8",
                    },
                    {
                        internalType: "enum ResaleHoldPeriod",
                        name: "resaleHoldPeriod",
                        type: "uint8",
                    },
                ],
                internalType: "struct RegulationData",
                name: "regulationData_",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
class TRexIFactory__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TRexIFactory__factory = TRexIFactory__factory;
