"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TRexIDiamondLoupe__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacet",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "interfaceIds",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct TRexIDiamondLoupe.Facet",
                name: "facet_",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "getFacetAddress",
        outputs: [
            {
                internalType: "address",
                name: "facetAddress_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFacetAddresses",
        outputs: [
            {
                internalType: "address[]",
                name: "facetAddresses_",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetAddressesByPage",
        outputs: [
            {
                internalType: "address[]",
                name: "facetAddresses_",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "getFacetIdBySelector",
        outputs: [
            {
                internalType: "bytes32",
                name: "facetId_",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFacetIds",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "facetIds_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetIdsByPage",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "facetIds_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacetSelectors",
        outputs: [
            {
                internalType: "bytes4[]",
                name: "facetSelectors_",
                type: "bytes4[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetSelectorsByPage",
        outputs: [
            {
                internalType: "bytes4[]",
                name: "facetSelectors_",
                type: "bytes4[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacetSelectorsLength",
        outputs: [
            {
                internalType: "uint256",
                name: "facetSelectorsLength_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFacets",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "interfaceIds",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct TRexIDiamondLoupe.Facet[]",
                name: "facets_",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetsByPage",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "interfaceIds",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct TRexIDiamondLoupe.Facet[]",
                name: "facets_",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFacetsLength",
        outputs: [
            {
                internalType: "uint256",
                name: "facetsLength_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class TRexIDiamondLoupe__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TRexIDiamondLoupe__factory = TRexIDiamondLoupe__factory;
