import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Factory, FactoryInterface } from "../../../contracts/factory/Factory";
type FactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Factory__factory extends ContractFactory {
    constructor(...args: FactoryConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Factory>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Factory;
    connect(signer: Signer): Factory__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBusinessLogicResolver";
            readonly name: "resolver";
            readonly type: "address";
        }];
        readonly name: "EmptyResolver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ExpirationNotReached";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoInitialAdmins";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum RegulationType";
            readonly name: "regulationType";
            readonly type: "uint8";
        }, {
            readonly internalType: "enum RegulationSubType";
            readonly name: "regulationSubType";
            readonly type: "uint8";
        }];
        readonly name: "RegulationTypeAndSubTypeForbidden";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "isin";
            readonly type: "string";
        }];
        readonly name: "WrongISIN";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "isin";
            readonly type: "string";
        }];
        readonly name: "WrongISINChecksum";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "deployer";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bondAddress";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "arePartitionsProtected";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isMultiPartition";
                    readonly type: "bool";
                }, {
                    readonly internalType: "contract IBusinessLogicResolver";
                    readonly name: "resolver";
                    readonly type: "address";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "key";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "version";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IFactory.ResolverProxyConfiguration";
                    readonly name: "resolverProxyConfiguration";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "role";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "members";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct IResolverProxy.Rbac[]";
                    readonly name: "rbacs";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isControllable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isWhiteList";
                    readonly type: "bool";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxSupply";
                    readonly type: "uint256";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "symbol";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "isin";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint8";
                        readonly name: "decimals";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct IERC20.ERC20MetadataInfo";
                    readonly name: "erc20MetadataInfo";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "bool";
                    readonly name: "clearingActive";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "internalKycActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalPauses";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalControlLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalKycLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "erc20VotesActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "compliance";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "identityRegistry";
                    readonly type: "address";
                }];
                readonly internalType: "struct IFactory.SecurityData";
                readonly name: "security";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes3";
                    readonly name: "currency";
                    readonly type: "bytes3";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nominalValue";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "startingDate";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maturityDate";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IBondRead.BondDetailsData";
                readonly name: "bondDetails";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "couponFrequency";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "couponRate";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "firstCouponDate";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IBondRead.CouponDetailsData";
                readonly name: "couponDetails";
                readonly type: "tuple";
            }];
            readonly indexed: false;
            readonly internalType: "struct IFactory.BondData";
            readonly name: "bondData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "enum RegulationType";
                readonly name: "regulationType";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum RegulationSubType";
                readonly name: "regulationSubType";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "countriesControlListType";
                    readonly type: "bool";
                }, {
                    readonly internalType: "string";
                    readonly name: "listOfCountries";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "info";
                    readonly type: "string";
                }];
                readonly internalType: "struct AdditionalSecurityData";
                readonly name: "additionalSecurityData";
                readonly type: "tuple";
            }];
            readonly indexed: false;
            readonly internalType: "struct FactoryRegulationData";
            readonly name: "regulationData";
            readonly type: "tuple";
        }];
        readonly name: "BondDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "deployer";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "equityAddress";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "arePartitionsProtected";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isMultiPartition";
                    readonly type: "bool";
                }, {
                    readonly internalType: "contract IBusinessLogicResolver";
                    readonly name: "resolver";
                    readonly type: "address";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "key";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "version";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IFactory.ResolverProxyConfiguration";
                    readonly name: "resolverProxyConfiguration";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "role";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "members";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct IResolverProxy.Rbac[]";
                    readonly name: "rbacs";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isControllable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isWhiteList";
                    readonly type: "bool";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxSupply";
                    readonly type: "uint256";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "symbol";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "isin";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint8";
                        readonly name: "decimals";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct IERC20.ERC20MetadataInfo";
                    readonly name: "erc20MetadataInfo";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "bool";
                    readonly name: "clearingActive";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "internalKycActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalPauses";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalControlLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalKycLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "erc20VotesActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "compliance";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "identityRegistry";
                    readonly type: "address";
                }];
                readonly internalType: "struct IFactory.SecurityData";
                readonly name: "security";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "votingRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "informationRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "liquidationRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "subscriptionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "conversionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "redemptionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "putRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "enum IEquity.DividendType";
                    readonly name: "dividendRight";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes3";
                    readonly name: "currency";
                    readonly type: "bytes3";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nominalValue";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IEquity.EquityDetailsData";
                readonly name: "equityDetails";
                readonly type: "tuple";
            }];
            readonly indexed: false;
            readonly internalType: "struct IFactory.EquityData";
            readonly name: "equityData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "enum RegulationType";
                readonly name: "regulationType";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum RegulationSubType";
                readonly name: "regulationSubType";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "countriesControlListType";
                    readonly type: "bool";
                }, {
                    readonly internalType: "string";
                    readonly name: "listOfCountries";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "info";
                    readonly type: "string";
                }];
                readonly internalType: "struct AdditionalSecurityData";
                readonly name: "additionalSecurityData";
                readonly type: "tuple";
            }];
            readonly indexed: false;
            readonly internalType: "struct FactoryRegulationData";
            readonly name: "regulationData";
            readonly type: "tuple";
        }];
        readonly name: "EquityDeployed";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "arePartitionsProtected";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isMultiPartition";
                    readonly type: "bool";
                }, {
                    readonly internalType: "contract IBusinessLogicResolver";
                    readonly name: "resolver";
                    readonly type: "address";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "key";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "version";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IFactory.ResolverProxyConfiguration";
                    readonly name: "resolverProxyConfiguration";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "role";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "members";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct IResolverProxy.Rbac[]";
                    readonly name: "rbacs";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isControllable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isWhiteList";
                    readonly type: "bool";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxSupply";
                    readonly type: "uint256";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "symbol";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "isin";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint8";
                        readonly name: "decimals";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct IERC20.ERC20MetadataInfo";
                    readonly name: "erc20MetadataInfo";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "bool";
                    readonly name: "clearingActive";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "internalKycActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalPauses";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalControlLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalKycLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "erc20VotesActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "compliance";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "identityRegistry";
                    readonly type: "address";
                }];
                readonly internalType: "struct IFactory.SecurityData";
                readonly name: "security";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes3";
                    readonly name: "currency";
                    readonly type: "bytes3";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nominalValue";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "startingDate";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maturityDate";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IBondRead.BondDetailsData";
                readonly name: "bondDetails";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "couponFrequency";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "couponRate";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "firstCouponDate";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IBondRead.CouponDetailsData";
                readonly name: "couponDetails";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IFactory.BondData";
            readonly name: "_bondData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "enum RegulationType";
                readonly name: "regulationType";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum RegulationSubType";
                readonly name: "regulationSubType";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "countriesControlListType";
                    readonly type: "bool";
                }, {
                    readonly internalType: "string";
                    readonly name: "listOfCountries";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "info";
                    readonly type: "string";
                }];
                readonly internalType: "struct AdditionalSecurityData";
                readonly name: "additionalSecurityData";
                readonly type: "tuple";
            }];
            readonly internalType: "struct FactoryRegulationData";
            readonly name: "_factoryRegulationData";
            readonly type: "tuple";
        }];
        readonly name: "deployBond";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "bondAddress_";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "arePartitionsProtected";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isMultiPartition";
                    readonly type: "bool";
                }, {
                    readonly internalType: "contract IBusinessLogicResolver";
                    readonly name: "resolver";
                    readonly type: "address";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "key";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "version";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IFactory.ResolverProxyConfiguration";
                    readonly name: "resolverProxyConfiguration";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "role";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "members";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct IResolverProxy.Rbac[]";
                    readonly name: "rbacs";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isControllable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "isWhiteList";
                    readonly type: "bool";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxSupply";
                    readonly type: "uint256";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "symbol";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "isin";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint8";
                        readonly name: "decimals";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct IERC20.ERC20MetadataInfo";
                    readonly name: "erc20MetadataInfo";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "bool";
                    readonly name: "clearingActive";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "internalKycActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalPauses";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalControlLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "externalKycLists";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "bool";
                    readonly name: "erc20VotesActivated";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "compliance";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "identityRegistry";
                    readonly type: "address";
                }];
                readonly internalType: "struct IFactory.SecurityData";
                readonly name: "security";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "votingRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "informationRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "liquidationRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "subscriptionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "conversionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "redemptionRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bool";
                    readonly name: "putRight";
                    readonly type: "bool";
                }, {
                    readonly internalType: "enum IEquity.DividendType";
                    readonly name: "dividendRight";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes3";
                    readonly name: "currency";
                    readonly type: "bytes3";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nominalValue";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IEquity.EquityDetailsData";
                readonly name: "equityDetails";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IFactory.EquityData";
            readonly name: "_equityData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "enum RegulationType";
                readonly name: "regulationType";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum RegulationSubType";
                readonly name: "regulationSubType";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bool";
                    readonly name: "countriesControlListType";
                    readonly type: "bool";
                }, {
                    readonly internalType: "string";
                    readonly name: "listOfCountries";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "info";
                    readonly type: "string";
                }];
                readonly internalType: "struct AdditionalSecurityData";
                readonly name: "additionalSecurityData";
                readonly type: "tuple";
            }];
            readonly internalType: "struct FactoryRegulationData";
            readonly name: "_factoryRegulationData";
            readonly type: "tuple";
        }];
        readonly name: "deployEquity";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "equityAddress_";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum RegulationType";
            readonly name: "_regulationType";
            readonly type: "uint8";
        }, {
            readonly internalType: "enum RegulationSubType";
            readonly name: "_regulationSubType";
            readonly type: "uint8";
        }];
        readonly name: "getAppliedRegulationData";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "enum RegulationType";
                readonly name: "regulationType";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum RegulationSubType";
                readonly name: "regulationSubType";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "dealSize";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum AccreditedInvestors";
                readonly name: "accreditedInvestors";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxNonAccreditedInvestors";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum ManualInvestorVerification";
                readonly name: "manualInvestorVerification";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum InternationalInvestors";
                readonly name: "internationalInvestors";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum ResaleHoldPeriod";
                readonly name: "resaleHoldPeriod";
                readonly type: "uint8";
            }];
            readonly internalType: "struct RegulationData";
            readonly name: "regulationData_";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): FactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Factory;
}
export {};
