"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IERC3643Management__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AddressNotVerified",
        type: "error",
    },
    {
        inputs: [],
        name: "CannotRecoverWallet",
        type: "error",
    },
    {
        inputs: [],
        name: "ComplianceCallFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "ComplianceNotAllowed",
        type: "error",
    },
    {
        inputs: [],
        name: "IdentityRegistryCallFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "InputAmountsArrayLengthMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "InputBoolArrayLengthMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "WalletRecovered",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_agent",
                type: "address",
            },
        ],
        name: "AgentAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_agent",
                type: "address",
            },
        ],
        name: "AgentRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "identityRegistry",
                type: "address",
            },
        ],
        name: "IdentityRegistryAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_lostWallet",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_newWallet",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_investorOnchainID",
                type: "address",
            },
        ],
        name: "RecoverySuccess",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "string",
                name: "newName",
                type: "string",
            },
            {
                indexed: true,
                internalType: "string",
                name: "newSymbol",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "newDecimals",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "string",
                name: "newVersion",
                type: "string",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOnchainID",
                type: "address",
            },
        ],
        name: "UpdatedTokenInformation",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_agent",
                type: "address",
            },
        ],
        name: "addAgent",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_compliance",
                type: "address",
            },
            {
                internalType: "address",
                name: "_identityRegistry",
                type: "address",
            },
        ],
        name: "initialize_ERC3643",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_lostWallet",
                type: "address",
            },
            {
                internalType: "address",
                name: "_newWallet",
                type: "address",
            },
            {
                internalType: "address",
                name: "_investorOnchainID",
                type: "address",
            },
        ],
        name: "recoveryAddress",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_agent",
                type: "address",
            },
        ],
        name: "removeAgent",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_compliance",
                type: "address",
            },
        ],
        name: "setCompliance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_identityRegistry",
                type: "address",
            },
        ],
        name: "setIdentityRegistry",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
        ],
        name: "setName",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_onchainID",
                type: "address",
            },
        ],
        name: "setOnchainID",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
        ],
        name: "setSymbol",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IERC3643Management__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IERC3643Management__factory = IERC3643Management__factory;
