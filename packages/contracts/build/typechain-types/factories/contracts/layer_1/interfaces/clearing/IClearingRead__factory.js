"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IClearingRead__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "ClearingIsActivated",
        type: "error",
    },
    {
        inputs: [],
        name: "ClearingIsDisabled",
        type: "error",
    },
    {
        inputs: [],
        name: "ExpirationDateNotReached",
        type: "error",
    },
    {
        inputs: [],
        name: "ExpirationDateReached",
        type: "error",
    },
    {
        inputs: [],
        name: "WrongClearingId",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getClearedAmountFor",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getClearedAmountForByPartition",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "enum IClearing.ClearingOperationType",
                name: "_clearingOperationType",
                type: "uint8",
            },
        ],
        name: "getClearingCountForByPartition",
        outputs: [
            {
                internalType: "uint256",
                name: "clearingCount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "enum IClearing.ClearingOperationType",
                name: "_clearingOperationType",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "clearingId_",
                type: "uint256",
            },
        ],
        name: "getClearingThirdParty",
        outputs: [
            {
                internalType: "address",
                name: "thirdParty_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "enum IClearing.ClearingOperationType",
                name: "_clearingOperationType",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getClearingsIdForByPartition",
        outputs: [
            {
                internalType: "uint256[]",
                name: "clearingsId_",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IClearingRead__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IClearingRead__factory = IClearingRead__factory;
