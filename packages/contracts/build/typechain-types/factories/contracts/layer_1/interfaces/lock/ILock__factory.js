"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ILock__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenHolder",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lockId",
                type: "uint256",
            },
        ],
        name: "LockByPartitionReleased",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "tokenHolder",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lockId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "expirationTimestamp",
                type: "uint256",
            },
        ],
        name: "LockedByPartition",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getLockCountFor",
        outputs: [
            {
                internalType: "uint256",
                name: "lockCount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getLockCountForByPartition",
        outputs: [
            {
                internalType: "uint256",
                name: "lockCount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_lockId",
                type: "uint256",
            },
        ],
        name: "getLockFor",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expirationTimestamp_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_lockId",
                type: "uint256",
            },
        ],
        name: "getLockForByPartition",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expirationTimestamp_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getLockedAmountFor",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "getLockedAmountForByPartition",
        outputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getLocksIdFor",
        outputs: [
            {
                internalType: "uint256[]",
                name: "locksId_",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getLocksIdForByPartition",
        outputs: [
            {
                internalType: "uint256[]",
                name: "locksId_",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
        ],
        name: "lock",
        outputs: [
            {
                internalType: "bool",
                name: "success_",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "lockId_",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
        ],
        name: "lockByPartition",
        outputs: [
            {
                internalType: "bool",
                name: "success_",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "lockId_",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_lockId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "release",
        outputs: [
            {
                internalType: "bool",
                name: "success_",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_partition",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_lockId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_tokenHolder",
                type: "address",
            },
        ],
        name: "releaseByPartition",
        outputs: [
            {
                internalType: "bool",
                name: "success_",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class ILock__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ILock__factory = ILock__factory;
