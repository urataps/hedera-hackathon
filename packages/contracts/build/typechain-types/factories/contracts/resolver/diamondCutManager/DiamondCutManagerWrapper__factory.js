"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiamondCutManagerWrapper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AllBusinessLogicKeysMustBeenInformed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "businessLogicKey",
                type: "bytes32",
            },
        ],
        name: "BusinessLogicKeyDuplicated",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "businessLogicKey",
                type: "bytes32",
            },
        ],
        name: "BusinessLogicNotActive",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "version",
                type: "uint256",
            },
        ],
        name: "BusinessLogicVersionDoesNotExist",
        type: "error",
    },
    {
        inputs: [],
        name: "DefaultValueForConfigurationIdNotPermitted",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "facetId",
                type: "bytes32",
            },
        ],
        name: "DuplicatedFacetInConfiguration",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "configurationId",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "facetId",
                type: "bytes32",
            },
        ],
        name: "FacetIdNotRegistered",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "resolverProxyConfigurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "version",
                type: "uint256",
            },
        ],
        name: "ResolverProxyConfigurationNoRegistered",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
            },
        ],
        name: "SelectorBlacklisted",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroKeyNotValidForBusinessLogic",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "configurationId",
                type: "bytes32",
            },
        ],
        name: "DiamondBatchConfigurationCanceled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "configurationId",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct IDiamondCutManager.FacetConfiguration[]",
                name: "facetConfigurations",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "_isLastBatch",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "version",
                type: "uint256",
            },
        ],
        name: "DiamondBatchConfigurationCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "configurationId",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct IDiamondCutManager.FacetConfiguration[]",
                name: "facetConfigurations",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "version",
                type: "uint256",
            },
        ],
        name: "DiamondConfigurationCreated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
        ],
        name: "cancelBatchConfiguration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
        ],
        name: "checkResolverProxyConfigurationRegistered",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDiamondCutManager.FacetConfiguration[]",
                name: "_facetConfigurations",
                type: "tuple[]",
            },
            {
                internalType: "bool",
                name: "_isLastBatch",
                type: "bool",
            },
        ],
        name: "createBatchConfiguration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDiamondCutManager.FacetConfiguration[]",
                name: "_facetConfigurations",
                type: "tuple[]",
            },
        ],
        name: "createConfiguration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getConfigurations",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "configurationIds_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getConfigurationsLength",
        outputs: [
            {
                internalType: "uint256",
                name: "configurationsLength_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacetAddressByConfigurationIdVersionAndFacetId",
        outputs: [
            {
                internalType: "address",
                name: "facetAddress_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetAddressesByConfigurationIdAndVersion",
        outputs: [
            {
                internalType: "address[]",
                name: "facetAddresses_",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacetByConfigurationIdVersionAndFacetId",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "interfaceIds",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct IDiamondLoupe.Facet",
                name: "facet_",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "getFacetIdByConfigurationIdVersionAndSelector",
        outputs: [
            {
                internalType: "bytes32",
                name: "facetId_",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetIdsByConfigurationIdAndVersion",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "facetIds_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetSelectorsByConfigurationIdVersionAndFacetId",
        outputs: [
            {
                internalType: "bytes4[]",
                name: "facetSelectors_",
                type: "bytes4[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_facetId",
                type: "bytes32",
            },
        ],
        name: "getFacetSelectorsLengthByConfigurationIdVersionAndFacetId",
        outputs: [
            {
                internalType: "uint256",
                name: "facetSelectorsLength_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pageLength",
                type: "uint256",
            },
        ],
        name: "getFacetsByConfigurationIdAndVersion",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "id",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "interfaceIds",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct IDiamondLoupe.Facet[]",
                name: "facets_",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
        ],
        name: "getFacetsLengthByConfigurationIdAndVersion",
        outputs: [
            {
                internalType: "uint256",
                name: "facetsLength_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
        ],
        name: "getLatestVersionByConfiguration",
        outputs: [
            {
                internalType: "uint256",
                name: "latestVersion_",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
        ],
        name: "isResolverProxyConfigurationRegistered",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "resolveResolverProxyCall",
        outputs: [
            {
                internalType: "address",
                name: "facetAddress_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_configurationId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_version",
                type: "uint256",
            },
            {
                internalType: "bytes4",
                name: "_interfaceId",
                type: "bytes4",
            },
        ],
        name: "resolveSupportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "exists_",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class DiamondCutManagerWrapper__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DiamondCutManagerWrapper__factory = DiamondCutManagerWrapper__factory;
