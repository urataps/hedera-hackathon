"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LockStorageWrapper1__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "AccountHasNoRole",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bytes32[]",
                name: "roles",
                type: "bytes32[]",
            },
        ],
        name: "AccountHasNoRoles",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "AccountIsBlocked",
        type: "error",
    },
    {
        inputs: [],
        name: "AllBusinessLogicKeysMustBeenInformed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "businessLogicKey",
                type: "bytes32",
            },
        ],
        name: "BusinessLogicKeyDuplicated",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "businessLogicKey",
                type: "bytes32",
            },
        ],
        name: "BusinessLogicNotActive",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "version",
                type: "uint256",
            },
        ],
        name: "BusinessLogicVersionDoesNotExist",
        type: "error",
    },
    {
        inputs: [],
        name: "ExpirationNotReached",
        type: "error",
    },
    {
        inputs: [],
        name: "FactorIsZero",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "requestedUnfreeze",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "availableFrozen",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
            },
        ],
        name: "InsufficientFrozenBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "LockExpirationNotReached",
        type: "error",
    },
    {
        inputs: [],
        name: "NotAutocalling",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "PartitionsAreProtectedAndNoRole",
        type: "error",
    },
    {
        inputs: [],
        name: "PartitionsAreUnProtected",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "rolesLength",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "activesLength",
                type: "uint256",
            },
        ],
        name: "RolesAndActivesLengthMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "snapshotId",
                type: "uint256",
            },
        ],
        name: "SnapshotIdDoesNotExists",
        type: "error",
    },
    {
        inputs: [],
        name: "SnapshotIdNull",
        type: "error",
    },
    {
        inputs: [],
        name: "TokenIsPaused",
        type: "error",
    },
    {
        inputs: [],
        name: "TokenIsUnpaused",
        type: "error",
    },
    {
        inputs: [],
        name: "WrongExpirationTimestamp",
        type: "error",
    },
    {
        inputs: [],
        name: "WrongLockId",
        type: "error",
    },
    {
        inputs: [],
        name: "WrongSignature",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "timeStamp",
                type: "uint256",
            },
        ],
        name: "WrongTimestamp",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroKeyNotValidForBusinessLogic",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "factor",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
            },
        ],
        name: "AdjustmentBalanceSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "compliance",
                type: "address",
            },
        ],
        name: "ComplianceAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "PartitionsProtected",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "PartitionsUnProtected",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "nounce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "ProtectedRedeemFrom",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "partition",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "nounce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "ProtectedTransferFrom",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "previousAdminRole",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "newAdminRole",
                type: "bytes32",
            },
        ],
        name: "RoleAdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "snapshotID",
                type: "uint256",
            },
        ],
        name: "SnapshotTaken",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "snapshotId",
                type: "uint256",
            },
        ],
        name: "SnapshotTriggered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "TokenPaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "TokenUnpaused",
        type: "event",
    },
];
class LockStorageWrapper1__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.LockStorageWrapper1__factory = LockStorageWrapper1__factory;
